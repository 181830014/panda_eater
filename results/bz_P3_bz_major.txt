7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=568970

-- Configuration Details --
Product: Eclipse IDE 4.17.0.20200910-1200 (org.eclipse.epp.package.jee.product)Installed Features:
 org.eclipse.jdt 3.18.500.v20200902-1800
Versioning Plugin:
 org.eclipse.platform 4.17.0.v20200902-1800
 
When I add a listener on a property and I put a switch block in it and the save, I get this error when I hover the red x that appears in the absolute top of my class next to my package name. Internal compiler error: java.lang.StringIndexOutOfBoundsException: offset 3912, count -29, length 4918 at java.base/java.lang.String.checkBoundsOffCount(String.java:3741)
 
 Also, when I type in the switch block, I press CTRL+SPACEBAR and there is no autocomplete suggestions that are listed when there should clearly be one.
 
 @Override
	public void initialize(URL location, ResourceBundle resources) {
		createComboBox();
		addEventFilters();
		aConvertirLabel.textProperty().bind(calculatriceController.getReponseLabel().textProperty());
		javafx.util.StringConverter<Number> converter = new NumberStringConverter();
		Bindings.bindBidirectional(aConvertirLabel.textProperty(), aConvertir, converter);
		aConvertir = new SimpleDoubleProperty();
		converti = new SimpleDoubleProperty();
		comboBox.selectionModelProperty();
		
		Bindings.bindBidirectional(aConvertirLabel.textProperty(), aConvertir, converter);
		convertiLabel.textProperty().bind(converti.asString());
		aConvertir.addListener((a)->{
			
			switch(comboBox.getSelectionModel().getSelectedIndex()) {
			case 0:
				aConvertir;
				break;
			default:
				break;
			}
		});
	}
The above code is how the bug happened.
	
I tried opening the class in Intelliji and everything worked just fine. If i close eclipse and I try to reopen it, I can't open this class file and the is a log for the bug but I don't know how to add it to the file becasue if I add it, it says that it's too long.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=568937

Eclipse freeze when invoking type hierarchy for java.lang.Object. It doesn't make sense to make a type hierarchy for java.lang.Object therefore the suggestion is to make the system not perform a TH for java.lang.Object,

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569030

Created attachment 284847 [details]
Whatvever

You guys are doing a good job by releasing upgrades every 3 months BUT..
Why can't i see updates(check the first attachment ) ??

And if only i need to upgrade manually why do i've to delete the whole Eclipse setup..why there is no UNINSTALL process yet ??

Even after deleting all the files related to 2019 12 version and downloading 2020 09 latest version..i'm not able to install it ..it doesn't even go to the first screen where we need to select JAVA or Enterprise JAVA etc( again check the second attachment )

It seems quite weird to me that as to why your product is getting so much promotion in the market when i'm simply just trying from the last 3 days to update it to the latest version and i'm not able to..

Instead of working on the updates just get the basic things done first
otherwise days of Eclipse in the market are counted.........

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569637

-- Configuration Details --
Product: Eclipse IDE 4.17.0.20200910-1200 (org.eclipse.epp.package.jee.product)Installed Features:
 org.eclipse.jdt 3.18.500.v20200902-1800
Versioning Plugin:
 org.eclipse.platform 4.17.0.v20200902-1800

 I have a Java project that uses two external jars: bcpkix-jdk15on-167.jar and bcprov-ext-jdk15to18-1.67.jar.  Both jars can be obtained from the maven repository (search using org.bouncycastle and you'll find them). Neither of the two jars contain a module-info.java declaration.  The bcprov-ext jar is a conventional plain old jar.  The bcpix jar however is packaged as an OSGI bundle thats contains the OSGI header statements Export-Package and Import-Package.  All the packages needed to satisfy the Import-Package requirements can be resolved from the bcprov-ext jar.
 
 If I add the two jars to the projects classpath, I get an error in my project whenever I import a package from either jar.  It makes no difference on their order.  It I instead move the two jars to the modulepath and arrange the order correctly I can get the error on the Import statements that reference packages from that jar to go away. However, I get 2 error on my package statement:
 
 
The project was not built since its build path is incomplete. Cannot find the class file for org.bouncycastle.asn1.x500.X500Name. Fix the build path then try building this project

The type org.bouncycastle.asn1.x500.X500Name cannot be resolved. It is indirectly referenced from required .class files	

Import org.bouncycastle.asn1.x500.X500Name was the first import statement in my project.

I'm pretty sure there's a bug here, but it could also have something to do with my misunderstanding of java's modules.  My understanding is that when I added the jars to the classpath, that allows them to be treated for backward compatibility.  In other words the packages contained in them get added to an unnamed module and will resolve.  What I think is happening is the bcpkix is being treated as a module since it contains OSGI header statements even though it doesn't contain a module-info file. Being treated that why, it not able to resolve it Import-Package requirement because no other module is explicitly exporting those packages.  I could understand that behavior if that jar were put in the modulepath, but I don't think that it's suppose to work that way if it put on the classpath instead.

One more thing, I modified the pcpkix jar and removed the Import-Package statement from the Manifest file and I could get things to work without errors.  Again, I think that's not the behavior that should happen if the jar were added to the classpath

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569028

Given:
private void myMethod() {
  methodWithUunusedParam(123);
}

private void methodWithUunusedParam(int unused) {
}

When:
Clicking on "Remove 'unused', keep assignments with side effects"

Then:
private void myMethod() {
  methodWithUunusedParam(123);
                         ^^^
}

private void methodWithUunusedParam() {
}

Compilation error.


When a method parameter (let's name it 'x') is not used in the method body, there is the warning "The value of the parameter x is not used". 5 quickfixes are available. The first one is "Remove 'x', keep assignments with side effects". If you click on the quickfix, the parameter is removed on the method signature but the method calls are not updated. In other words, the values passed as the parameter are still passed and the signature of the call becomes wrong.

Currently, if a user wants to use this quickfix, the user should rather right-click on the method, click on Refactor -> Change the Method Signature... -> Select the parameter, click on remove and click on OK. Doing so, so behavior is correct.

The quickfix should do the same. It should refactor the whole project. It seems that the code should be edited here:
https://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/tree/org.eclipse.jdt.core.manipulation/core%20extension/org/eclipse/jdt/internal/corext/fix/UnusedCodeFixCore.java?id=c63ac951840bb1149dd72111d963b0129d9df235#n225

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569640

Created attachment 285017 [details]
Thread Dump from jvisualvm before running test

If I Run As JUnit Test Case on any single test file in one of the projects in our workspace or on the whole project, it jumps from 20% to 100% progress allowing to move the mouse for a few more seconds before completely locking up the whole computer. Thread dump before the action and errors after the action are attached.

Version: 2020-06 (4.16.0)
Build id: 20200615-1200

openjdk version "1.8.0_202"
OpenJDK Runtime Environment Corretto-8.202.08.2 (build 1.8.0_202-b08)
OpenJDK 64-Bit Server VM Corretto-8.202.08.2 (build 25.202-b08, mixed mode)

Run JUnit 4 test with the default run configuration

-Xmx2g for Eclipse

32GB ram, 14 GB used, no swapping

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569052

When the user opens a CDT editor on a class, but code has never been generated from it, the CDT editor will not open without any exception (the user will eventually be asked to choose a generator, but the generator hint is not stored either).
A workaround is to invoke code generation at least once before opening a CDT editor.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569511

Created attachment 284977 [details]
Preferences Dialog with filter text not working

Whenever I try to filter options from the preferences Window, it does not work at all and sometimes the text of the tree changes font size.

I am using MacOS Big Sur and recently updated my Eclipse IDE to Build 20200910-1200 and no more updates available.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569592

Created attachment 285005 [details]
Example screenshot of the problem

My machine is running Mac OSX 10.15 and I have the system setting for Dark appearance. In the Eclipse Preferences under General -> Appearance, I have the Dark theme chosen. Some C/C++ preferences are displaying very badly in this configuration (see the attached screenshot).

Just doing a quick scan, this problem exists in the following Eclipse preferences:

C/C++ -> Indexer

And in the Project properties at:

C/C++ Build -> Logging
C/C++ General
C/C++ General -> Indexer

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569041

Created attachment 284852 [details]
Screenshot

search field is not properly sized on Mac BigSur. Barely see the text that written into the field.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569676

Please bring the windows agent back online again:

mp23n-windows-10

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569034

- If you create a SwitchStatement with single-expression case, the formatting will be good.
 - If you create a SwitchStatement with multi-expression case (Java 12), the formatting will be broken:

switch (i1){case 0:// Keep this comment too
        i = 0;
        // Keep this comment also
break;case 1:i = 10;break;case 2:i = 20;break;case 3:i = 25;i = 30;break;case 4:i = 40;break;case 5, 6:i = 60;break;case 7, 8:i = 80;break;case 9, 10:i = 100;break;case 11, 12, 13:i = 130;break;case 14:if (i2 == 1) {
            i = 140;
        }break;default:if (i2 == 2) {
            i = 150;
        }break;}

To test it, look at this gerrit that enables the Java 12 feature in a cleanup rule (a rule that converts an if/else if chain into switch):
https://git.eclipse.org/r/c/jdt/eclipse.jdt.ui/+/171024/146/

The build result is here:
https://ci.eclipse.org/jdt/job/eclipse.jdt.ui-Gerrit/7796/console

The output code is good, only the formatting is broken.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569362

Actual version is 2.7.7, but that is not selectable.

When a cacheable entity which has a relationship to a non-cacheable entity is retrieved via another OneToMany relationship (from a parent) and that entity is invalidated in the cache, the old (invalidated) entity is returned instead of a newly fetched one.

Example:
- Optimistic locking is used
- Forest has OneToMany Trees
- Tree has ManyToOne TreeType(@Cacheable(false))
- A Tree was changed in the DB (also changing the version field)
- When saving the Tree in EclipseLink, an OptimisticLockException is thrown
- When fetching the Forest afterwards, it contains the OLD tree instead of the new one

- Making TreeType cacheable resolves the problem
- Fetching the (invalidated) tree directly resolves the problem
- Invalidating the Forest in the cache resolves the problem

An example to reproduce the bug can be found at
https://github.com/andilem/eclipselink-bug

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=568891

The following error is when when opening a property file which is inside a jar file

An error has occurred. See error log for more details.
Cannot invoke "org.eclipse.jface.text.source.IAnnotationModel.getAnnotationIterator()" because "annotationModel" is null

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569084

The implementation of CPThreadSemaphore::timedWait in src/arch/posix/forte_sem.cpp uses a busy-wait loop which causes 100% CPU usage on one CPU core if called.

Functionally this is correct, and it is unavoidable when using this API.  POSIX semaphores use CLOCK_REALTIME for sem_timedwait.  This means that leap seconds or DST changes affect waiting times, leading to serious problems. Unfortunately, there is no (portable) way of specifying a different clock (CLOCK_MONOTONIC would be correct). This leaves busy-waiting as only alternative.

A solution would be to use POSIX condition variables (part of the POSIX threads API), which offers control over clocks.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569056

eclipse-platform-I20201122-1800-macosx-cocoa-x86_64.dmg on macOS Catalina.

Opening a file using the Open With context menu is not changing the default for that file. With the platform download, if I right-click on a .txt file, the "Text Editor" is what's selected on the Open With context menu. If I instead choose the System Editor or use the Other... option to pick the Generic Text Editor, the listed default remains the Text Editor. Even for pom.xml files where the Generic Text Editor is shown as an option even in the platform download, the default doesn't appear to change if I use it.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569120

When trying to run the Scout build for SimRel M3 I encounter a message about an expired SSH key. I didn't find a way to update the key.

pub  rsa4096/740957CDD3999812
     created: 2015-11-17  expired: 2020-11-15  usage: SC  
     trust: unknown       validity: expired
ssb  rsa4096/B66816AB844B3FEB
     created: 2015-11-17  expired: 2020-11-15  usage: S   
[ expired] (1). Eclipse Scout Project <scout-dev@eclipse.org>

For full log output see https://ci.eclipse.org/scout/job/org.eclipse.scout.rt_deploy_from_tag/

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=568959

eclipse.buildId=4.18.0.I20201116-1800
java.version=15.0.1
java.vendor=Red Hat, Inc.
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -data file:/home/mistria/workspace/ -os linux -ws gtk -arch x86_64 -clean

This is a continuation of log file /home/mistria/workspace/.metadata/.bak_1.log
Created Time: 2020-11-19 13:38:32.641

org.eclipse.jdt.core
Error
Thu Nov 19 13:38:32 CET 2020
Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
/*********************************************************************
 * Copyright (c) 2017, 2020 Red Hat Inc. and others.
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *  Lucas Bullen (Red Hat Inc.) - Initial implementation
 *******************************************************************************/
package org.eclipse.corrosion.test;

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.CompletableFuture;
import java.util.function.Predicate;

import org.eclipse.cdt.debug.core.ICDTLaunchConfigurationConstants;
import org.eclipse.cdt.dsf.concurrent.DataRequestMonitor;
import org.eclipse.cdt.dsf.datamodel.IDMContext;
import org.eclipse.cdt.dsf.debug.service.IProcesses.IProcessDMContext;
import org.eclipse.cdt.dsf.debug.service.command.ICommandControlService;
import org.eclipse.cdt.dsf.gdb.launching.GdbAttachLaunchDelegate;
import org.eclipse.cdt.dsf.gdb.launching.GdbLaunch;
import org.eclipse.cdt.dsf.gdb.service.GDBBackend_7_12;
import org.eclipse.cdt.dsf.gdb.service.IGDBProcesses;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.Path;
import org.eclipse.core.runtime.jobs.Job;
import org.eclipse.corrosion.CorrosionPlugin;
import org.eclipse.corrosion.Messages;
import org.eclipse.corrosion.RustManager;
import org.eclipse.corrosion.cargo.core.CargoTools;
import org.eclipse.corrosion.debug.RustGDBLaunchWrapper;
import org.eclipse.corrosion.launch.RustLaunchDelegateTools;
import org.eclipse.debug.core.DebugPlugin;
import org.eclipse.debug.core.ILaunch;
import org.eclipse.debug.core.ILaunchConfiguration;
import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
import org.eclipse.debug.core.ILaunchManager;
import org.eclipse.debug.core.model.IProcess;
import org.eclipse.debug.core.model.LaunchConfigurationDelegate;
import org.eclipse.debug.ui.ILaunchShortcut;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.ui.IEditorPart;
import org.eclipse.unittest.ui.ConfigureViewerSupport;

public class CargoTestDelegate extends LaunchConfigurationDelegate implements ILaunchShortcut {
	public static final String CARGO_TEST_LAUNCH_CONFIG_TYPE_ID = "org.eclipse.corrosion.test.CargoTestDelegate"; //$NON-NLS-1$
	public static final String TEST_NAME_ATTRIBUTE = "TEST_NAME"; //$NON-NLS-1$
	public static final String CARGO_UNITTEST_VIEW_SUPPORT_ID = "org.eclipse.corrosion.unitTestSupport"; //$NON-NLS-1$

	private static final class GDBCommandAccessor extends GDBBackend_7_12 {
		public GDBCommandAccessor(ILaunchConfiguration config) {
			super(null, config);
		}

		@Override
		public String[] getDebuggerCommandLine() {
			return super.getDebuggerCommandLine();
		}

		@Override
		protected IPath getGDBPath() {
			return new Path(RustManager.getDefaultDebugger());
		}
	}

	@Override
	public ILaunch getLaunch(ILaunchConfiguration configuration, String mode) throws CoreException {
		CorrosionPlugin.activateUnitTestCoreBundle();
		updatedLaunchConfiguration(configuration);
		return super.getLaunch(configuration, mode);
	}

	@Override
	public void launch(ISelection selection, String mode) {
		try {
			ILaunchConfiguration launchConfig = getLaunchConfiguration(
					RustLaunchDelegateTools.firstResourceFromSelection(selection));
			RustLaunchDelegateTools.launch(launchConfig, mode);
		} catch (CoreException e) {
			CorrosionPlugin.logError(e);
		}
	}

	@Override
	public void launch(IEditorPart editor, String mode) {
		try {
			ILaunchConfiguration launchConfig = getLaunchConfiguration(
					RustLaunchDelegateTools.resourceFromEditor(editor));
			RustLaunchDelegateTools.launch(launchConfig, mode);
		} catch (CoreException e) {
			CorrosionPlugin.logError(e);
		}
	}

	@Override
	public void launch(ILaunchConfiguration configuration, String mode, ILaunch launch, IProgressMonitor monitor)
			throws CoreException {
		updatedLaunchConfiguration(configuration);
		String projectName = configuration.getAttribute(RustLaunchDelegateTools.PROJECT_ATTRIBUTE, ""); //$NON-NLS-1$
		String options = configuration.getAttribute(RustLaunchDelegateTools.OPTIONS_ATTRIBUTE, "").trim(); //$NON-NLS-1$
		String testName = configuration.getAttribute(TEST_NAME_ATTRIBUTE, ""); //$NON-NLS-1$
		String arguments = configuration.getAttribute(RustLaunchDelegateTools.ARGUMENTS_ATTRIBUTE, "").trim(); //$NON-NLS-1$
		String workingDirectoryString = RustLaunchDelegateTools
				.performVariableSubstitution(configuration.getAttribute(DebugPlugin.ATTR_WORKING_DIRECTORY, "").trim()); //$NON-NLS-1$
		File workingDirectory = RustLaunchDelegateTools.convertToAbsolutePath(workingDirectoryString);
		ILaunchConfigurationWorkingCopy wc = configuration.isWorkingCopy()
				? (ILaunchConfigurationWorkingCopy) configuration
				: configuration.getWorkingCopy();

		IProject project = null;
		if (!projectName.isEmpty()) {
			project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);
		}
		if (project == null || !project.exists()) {
			RustLaunchDelegateTools.openError(Messages.CargoRunDelegate_unableToLaunch,
					Messages.CargoRunDelegate_unableToFindProject);
			return;
		}
		if (workingDirectoryString.isEmpty() || !workingDirectory.exists() || !workingDirectory.isDirectory()) {
			wc.setAttribute(DebugPlugin.ATTR_WORKING_DIRECTORY, project.getLocation().toString());
		}
		IFile cargoManifest = project.getFile("Cargo.toml"); //$NON-NLS-1$
		if (!cargoManifest.exists()) {
			RustLaunchDelegateTools.openError(Messages.CargoRunDelegate_unableToLaunch,
					Messages.CargoRunDelegate_unableToFindToml);
			return;
		}

		List<String> cargoTestCommand = new ArrayList<>();
		if (ILaunchManager.DEBUG_MODE.equals(mode)) {
			wc.setAttribute(ICDTLaunchConfigurationConstants.ATTR_DEBUGGER_STOP_AT_MAIN, false);
			cargoTestCommand.addAll(Arrays.asList(new GDBCommandAccessor(wc).getDebuggerCommandLine()));
			cargoTestCommand.add("-ex"); //$NON-NLS-1$
			cargoTestCommand.add("set follow-fork-mode child"); //$NON-NLS-1$
			cargoTestCommand.add("--args"); //$NON-NLS-1$
		}
		cargoTestCommand.add(CargoTools.getCargoCommand());
		cargoTestCommand.add("test"); //$NON-NLS-1$
		if (!options.isEmpty()) {
			cargoTestCommand
					.addAll(Arrays.asList(RustLaunchDelegateTools.performVariableSubstitution(options).split("\\s+"))); //$NON-NLS-1$
		}

		final String cargoPathString = cargoManifest.getLocation().toPortableString();
		cargoTestCommand.add("--manifest-path"); //$NON-NLS-1$
		cargoTestCommand.add(cargoPathString);

		if (testName != null && !testName.isEmpty()) {
			cargoTestCommand.add(testName);
		}

		if (!arguments.isEmpty()) {
			cargoTestCommand.add("--"); //$NON-NLS-1$
			cargoTestCommand.addAll(
					Arrays.asList(RustLaunchDelegateTools.performVariableSubstitution(arguments).split("\\s+"))); //$NON-NLS-1$
		}

		final List<String> finalTestCommand = cargoTestCommand;
		final File finalWorkingDirectory = workingDirectory;
		String[] envArgs = DebugPlugin.getDefault().getLaunchManager().getEnvironment(configuration);
		if (envArgs == null) {
			envArgs = new String[0];
		}
		final String[] env = envArgs;
		CompletableFuture.runAsync(() -> {
			try {
				String[] cmdLine = finalTestCommand.toArray(new String[finalTestCommand.size()]);
				Process p = DebugPlugin.exec(cmdLine, finalWorkingDirectory, env);
				IProcess process = DebugPlugin.newProcess(launch, p, "cargo test"); //$NON-NLS-1$
				// TODO create GDB processes to attach to each child; and add them to ILaunch
				if (ILaunchManager.DEBUG_MODE.equals(mode)) {
					ProcessHandle cargoHandle = p.toHandle();
					RustGDBLaunchWrapper debugLaunch = launch instanceof RustGDBLaunchWrapper
							? (RustGDBLaunchWrapper) launch
							: new RustGDBLaunchWrapper(launch);
					new GdbAttachLaunchDelegate().launch(configuration, mode, debugLaunch, monitor);
					Set<ProcessHandle> captured = new HashSet<>();
					Job pollChildren = Job.createSystem("Capture children processes", progressMonitor -> {
						while (process.isR) {
							cargoHandle.children().filter(Predicate.not(captured::contains))
									// .filter(isInferiorDebugProcess) //
									.forEach(childHandle -> { //
										attach(childHandle, debugLaunch);
										captured.add(childHandle);
									});
						}
					});
					
				}
				process.setAttribute(IProcess.ATTR_CMDLINE, String.join(" ", cmdLine)); //$NON-NLS-1$
			} catch (CoreException e) {
				e.printStackTrace();
				RustLaunchDelegateTools.openError(Messages.CargoRunDelegate_unableToLaunch, e.getLocalizedMessage());
			}
		});
		if (wc != null)

		{
			wc.doSave();
		}
	}

	private void attach(ProcessHandle process, GdbLaunch debugLaunch) {
		IGDBProcesses procService = fTracker.getService(IGDBProcesses.class);
		ICommandControlService commandControl = fTracker.getService(ICommandControlService.class);

		if (procService != null && commandControl != null) {
			IProcessDMContext procDmc = procService.createProcessContext(commandControl.getContext(),
					fPid);
			procService.attachDebuggerToProcess(procDmc, finalBinaryPath,
					new DataRequestMonitor<IDMContext>(fExecutor, fRm) {
						@Override
						protected void handleSuccess() {
							// Store the path of the binary so we can use it again for another process
							// with the same name.  Only do this on success, to avoid being stuck with
							// a path that is invalid.
							if (fProcName != null && !fProcName.isEmpty()) {
								fProcessNameToBinaryMap.put(fProcName, finalBinaryPath);
							}
							fRm.done();
						}
					});
		}
	}

	/**
	 * Makes the necessary changes to the launch configuration before passing it to
	 * the underlying delegate. Currently, updates the program arguments with the
	 * value that was obtained from Tests Runner provider plug-in.
	 *
	 * @param config launch configuration
	 * @throws CoreException in case of error
	 */
	private static void updatedLaunchConfiguration(ILaunchConfiguration config) throws CoreException {
		ILaunchConfigurationWorkingCopy configWC = config.getWorkingCopy();
		new ConfigureViewerSupport(CARGO_UNITTEST_VIEW_SUPPORT_ID).apply(configWC);
		configWC.setAttribute(ICDTLaunchConfigurationConstants.ATTR_DEBUGGER_START_MODE,
				ICDTLaunchConfigurationConstants.DEBUGGER_MODE_ATTACH);
		if (configWC.getAttribute(ILaunchManager.ATTR_ENVIRONMENT_VARIABLES, (Map<String, String>) null) == null) {
			configWC.setAttribute(ILaunchManager.ATTR_ENVIRONMENT_VARIABLES, Collections.emptyMap());
		}
		configWC.doSave();
	}

	private static ILaunchConfiguration getLaunchConfiguration(IResource resource) throws CoreException {
		ILaunchConfiguration launchConfiguration = RustLaunchDelegateTools
				.getLaunchConfiguration(resource, CARGO_TEST_LAUNCH_CONFIG_TYPE_ID).getWorkingCopy();
		if (launchConfiguration instanceof ILaunchConfigurationWorkingCopy) {
			ILaunchConfigurationWorkingCopy wc = (ILaunchConfigurationWorkingCopy) launchConfiguration;
			wc.setAttribute(RustLaunchDelegateTools.PROJECT_ATTRIBUTE, resource.getProject().getName());
			new ConfigureViewerSupport(CARGO_UNITTEST_VIEW_SUPPORT_ID).apply(wc);
		}
		return launchConfiguration;
	}
}

----------------------------------- SOURCE END -------------------------------------

java.lang.NullPointerException: Cannot invoke "org.eclipse.jdt.internal.compiler.lookup.Binding.isValidBinding()" because "this.binding" is null
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.optimizedBooleanConstant(QualifiedNameReference.java:931)
	at org.eclipse.jdt.internal.compiler.ast.WhileStatement.doesNotCompleteNormally(WhileStatement.java:328)
	at org.eclipse.jdt.internal.compiler.ast.Block.doesNotCompleteNormally(Block.java:174)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.analyzeShape(LambdaExpression.java:839)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isPotentiallyCompatibleWith(LambdaExpression.java:862)
	at org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.isPotentiallyCompatibleWith(PolyTypeBinding.java:48)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(Scope.java:5065)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(Scope.java:5031)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:871)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:798)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod0(Scope.java:1756)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1657)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(Scope.java:3045)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.findMethodBinding(MessageSend.java:1017)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:838)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:390)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:259)
	at org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:131)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.resolveIfStatement(IfStatement.java:282)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:308)
	at org.eclipse.jdt.internal.compiler.ast.Block.resolveUsing(Block.java:144)
	at org.eclipse.jdt.internal.compiler.ast.TryStatement.resolve(TryStatement.java:1209)
	at org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:131)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.resolveType(LambdaExpression.java:458)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.cachedResolvedCopy(LambdaExpression.java:975)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.internalIsCompatibleWith(LambdaExpression.java:890)
	at org.eclipse.jdt.internal.compiler.ast.LambdaExpression.isCompatibleWith(LambdaExpression.java:881)
	at org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding.isCompatibleWith(PolyTypeBinding.java:43)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(Scope.java:5067)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(Scope.java:5031)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:871)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:798)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod0(Scope.java:1756)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1657)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getMethod(Scope.java:3045)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.findMethodBinding(MessageSend.java:1017)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:838)
	at org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:1113)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:661)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:362)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1493)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1618)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:662)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:1066)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:272)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:192)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569358

after the gerrit outage this morning (creating severe fall out in a lot of CI/CD jobs) it seems that at least one gerrit project/repository is missing.

For years, we at the osmcoom.org project have been cloning from 

https://git.eclipse.org/r/titan/titan.ProtocolEmulations.M3UA/

and that one is now "Not found"

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569442

Given the source code

public class Application {
	public static void main(String[] args) {
		(new Application()).runInner();
	}
	
	private void runInner() {
		foo("", |)
	}
	
	private void foo(String name, State state) {
		
	}
}

When i try to compute a AST tree for this, i don't get the method invocation with two parameters, instead i get foo(""). This cause a syntax error like

The method foo(String, Thread.State) in the type Application is not applicable for the arguments (String)

But as soon as i add a semicolon to end of foo("",); this problem goes away.

Also if the foo was like foo(State state), single param it works fine as well. This cause issues in some autocompletions. specially few autocompletions i have in my one of my plugins which depends on proper AST resolution.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569668

Reproducible (though not 100%) in plain SDK 4.16. SDK has been freshly installed, no preferences modified, project is new (at this point it had the plugin nature, not sure if that is relevant):

Create the following class:
//---
package p.q;

import java.util.Collection;
import java.util.Set;

public class Test {
	void n(Set<Collection<?>> set, Collection<String> next) {
		
	}
}
//---

In the method body quickly type "set.add(next)" - all keyboard, nothing fancy, but quick!

The result looks like this:
//---
package p.q;

import java.util.Collection;
import java.util.Set;

public class Test {
	void n(Set<Collection<?>> set, Collection<String> next) {
		set.xt)addne(
	}
}
//---

During typing you briefly see a completion popup (around when you type '.'). Then it seems the '(' triggers insertion of a proposal, which seems to happen out of sequence producing a series of bad effects (I'm taking a few guesses here):
* '(' is not immediately added (consumed by "apply proposal"?)
* before proposal insertion adds anything to the buffer, more letters appear ("ne")
* during insertion the cursor jumps to the location right after '.'
* subsequent chars and the terminating ')' appear after the '.'

If you type faster, more letters will appear before the '(', though being typed later than '('.


Something is not well synchronized here.

Note: when I failed to reproduce, the best way to proceed was: close and re-open the editor.

Wow, I'm getting faster, this time I got "set.)addnext("

Similar effects can also be achieved, when you prepare "set.add" and then quickly press "<Ctrl+space><return>next". Again some of the letters may appear right after '.' and NO parens are inserted.

Setting major since it makes you want to switch off completion.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569479

Per title. The File > New ... wizard expects the wizards it creates to implement IWorkbenchWizard. It appears the only function to implement is init(), which can be empty.

Stack trace below:

java.lang.ClassCastException: class org.eclipse.launchbar.ui.internal.target.NewLaunchTargetWizard cannot be cast to class org.eclipse.ui.IWorkbenchWizard (org.eclipse.launchbar.ui.internal.target.NewLaunchTargetWizard is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @11240c06; org.eclipse.ui.IWorkbenchWizard is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @50684df0)
	at org.eclipse.ui.internal.dialogs.WorkbenchWizardElement.createWizard(WorkbenchWizardElement.java:254)
	at org.eclipse.ui.internal.dialogs.NewWizardNewPage$2.createWizard(NewWizardNewPage.java:691)
	at org.eclipse.ui.internal.dialogs.WorkbenchWizardNode$1.run(WorkbenchWizardNode.java:137)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.dialogs.WorkbenchWizardNode.lambda$0(WorkbenchWizardNode.java:122)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.dialogs.WorkbenchWizardNode.getWizard(WorkbenchWizardNode.java:122)
	at org.eclipse.jface.wizard.WizardSelectionPage.getNextPage(WizardSelectionPage.java:110)
	at org.eclipse.ui.internal.dialogs.WorkbenchWizardSelectionPage.getNextPage(WorkbenchWizardSelectionPage.java:98)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:910)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:468)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5785)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1427)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5048)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4526)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.ui.internal.handlers.WizardHandler$New.executeHandler(WizardHandler.java:260)
	at org.eclipse.ui.internal.handlers.WizardHandler.execute(WizardHandler.java:280)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.ui.internal.handlers.LegacyHandlerService.executeCommand(LegacyHandlerService.java:389)
	at org.eclipse.ui.internal.actions.CommandAction.runWithEvent(CommandAction.java:142)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5785)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1427)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5048)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4526)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1434)

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569344

Created attachment 284929 [details]
debug empty popup

In debug mode when i over on a variable i see empty popup, MacOS Big Sur and Eclipse 4.18RC1.  
Thanks

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569707

Snippet sufficient to reproduce on Ubuntu 20.04:
--------
final Display display = Display.getDefault();
final Shell shell = new Shell(display);

final Event e = new Event();
e.keyCode = 'a';
e.character = (char)'a';
e.type = SWT.KeyDown;
e.widget = shell;
display.post(e);

while (!shell.isDisposed()) {
	if (!display.readAndDispatch())
		display.sleep();
}

display.dispose();
--------

When it happens, there are errors on console:
--------
(SWT:3222): Gdk-WARNING **: 17:20:18.309: losing last reference to undestroyed window
(SWT:3222): Gdk-ERROR **: 17:20:18.310: attempted to destroy root window
--------

And then JVM terminates. Sometimes it will also 100% CPU hang.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569367

Created attachment 284934 [details]
Slow performance in 4.18 M3

I'm using macOS 11.0.1 and updated from 4.18 M2 to 4.18 M3. Editor performance seems to have degraded *significantly*.

I have attached a recording of a large file opened in the plain text editor:
* text selection lags about half a second behind mouse drag position.
* scrolling is extremely slow, and when scrolling for any significant amount of time, the editor UI is locked for several seconds trying to catch up with the scrolling events.
* line numbers take several seconds to update after scrolling, as shown in the recording.

The file showed in the recording is fairly big, ~100k lines, but rendered smoothly in older versions of Eclipse (separate recording from 4.18 M2 coming in next message). Even for small Java files of less than 100 lines, edition in Eclipse feels a lot less smooth than it used to.

Note that I'm using the built-in display with theming disabled in the IDE. I'm not able to try more recent builds of Eclipse:
* http://download.eclipse.org/releases/2020-12 and http://download.eclipse.org/eclipse/updates/4.18 still offer 4.18 M3 as the latest at the time of writing.
* trying to download the nightly directly is proving unsuccessful: download.eclipse.org seems to be struggling with download speed peaking at 30 kB/s. Other sites download fine at ~10 MB/s.

Can anyone else reproduce this behaviour?

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569485

Created attachment 284967 [details]
Screen recording of bug

When debugging Java source code, you can hoover the mouse over a variable, and a popup will show up. Before, I remember that the popup would show the current value of the variable, which was highly useful.

Now it is just empty.

Eclipse Version: 2020-09 (4.17.0) Build id: 20200910-1200
MacOS: Big Sur Version 11.0.1

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=568980

macOS Big Sur 11.0.1 在debug运行时，不显示变量值，然后页面中代码会错位，不兼容macOS Big Sur 11.0.1新系统

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=568910

We have recently upgraded from xText version 2.7.3 to version 2.20. Also upgraded the antlr parser and mwe2 generator libraries. After this upgrade we are facing an issue while importing models to file. We have model information stored in database, we read this information from database create a model object as per the hierarchy mentioned in the grammar file. Then we save this model resource into a file. The issue is with the serialization of the model as the data is not generated with the correct syntax. And so the generated file shows compilation problems. I am mentioning below part of the grammar where we are facing issues. As the same functionality is working fine on lower xtext version so the issue seems to be with the framework api.
=========================================================
Grammar snippet:
Class: 
    (abstract?= 'abstract'?)? 
    'class' (classType=ClassType)? name = ID
	('extends' superClasses+=[Class|ID] (',' superClasses+=[Class|ID])* )? '{'(
	   (desc = Names)? &
	   (descLong = LongNames)? &
	   ('status' status = Status)? &
	   ('characteristics' csticReferences+=CsticClassReference (',' csticReferences+=CsticClassReference)* ','?)? &
	   ('interfaceDesign' interfaceDesign = [InterfaceDesign|ID])? 
)'}'; 
==========================================================
Generated class after importing:
class SME_CONFLICT {
	names EN 'Conflict root'
	characteristics
	S1 required characteristics
	S2 required characteristics
	S required
}
cstic S {
	names EN 'Sum'
	numericLength 3
}
cstic S1 {
	names EN 'Sum1'
	numericLength 3
}
cstic S2 {
	names EN 'Sum2'
	numericLength 3
}
==========================================================
The issue is with the class definition where the keyword 'characteristics' is appearing again and again, instead it should be a comma (',') separated list of cstics as per the syntax mentioned in grammar. Like below.

class SME_CONFLICT {
	names EN 'Conflict root'
	characteristics
	S1 required ,
	S2 required ,
	S required
}

Can you please look into the issue and provide some input on this.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569627

The tutorial for getting 4diac FORTE to compile with MinGW is wrong. In a standard MinGW setting the generator MinGW Makefiles have to be chosen and not the mentioned and in a screenshot shown Unix Makefiles generator

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569461

on html files. always raises this error . and ide freezes.

java.lang.NullPointerException
	at org.eclipse.jst.jsp.core.internal.contenttype.DeploymentDescriptorPropertyCache.getRelevantWebXMLPath(DeploymentDescriptorPropertyCache.java:936)
	at org.eclipse.jst.jsp.core.internal.contenttype.DeploymentDescriptorPropertyCache.getCachedDescriptor(DeploymentDescriptorPropertyCache.java:822)
	at org.eclipse.jst.jsp.core.internal.contenttype.DeploymentDescriptorPropertyCache.getJSPVersion(DeploymentDescriptorPropertyCache.java:869)
	at org.eclipse.jst.jsp.core.taglib.ProjectDescription.getAvailableTaglibRecords(ProjectDescription.java:1185)
	at org.eclipse.jst.jsp.core.taglib.TaglibIndex.internalGetAvailableTaglibRecords(TaglibIndex.java:866)
	at org.eclipse.jst.jsp.core.taglib.TaglibIndex.getAvailableTaglibRecords(TaglibIndex.java:497)
	at org.eclipse.jst.jsf.core.metadata.internal.TaglibMetaDataLocator.locateMetaDataModelProviders(TaglibMetaDataLocator.java:71)
	at org.eclipse.jst.jsf.common.metadata.internal.DomainLoadingStrategy.locateMetaDataSourceInstances(DomainLoadingStrategy.java:145)
	at org.eclipse.jst.jsf.common.metadata.internal.DomainLoadingStrategy.load(DomainLoadingStrategy.java:57)
	at org.eclipse.jst.jsf.common.metadata.internal.MetaDataModel.load(MetaDataModel.java:95)
	at org.eclipse.jst.jsf.common.metadata.internal.MetaDataModelManager.loadMetadata(MetaDataModelManager.java:152)
	at org.eclipse.jst.jsf.common.metadata.internal.MetaDataModelManager.getModel(MetaDataModelManager.java:95)
	at org.eclipse.jst.jsf.common.metadata.query.internal.MetaDataQueryHelper.getMDModel(MetaDataQueryHelper.java:126)
	at org.eclipse.jst.jsf.common.metadata.query.internal.MetaDataQueryHelper.getModel(MetaDataQueryHelper.java:61)
	at org.eclipse.jst.jsf.common.metadata.query.internal.MetaDataQueryHelper.getEntities(MetaDataQueryHelper.java:71)
	at org.eclipse.jst.jsf.common.metadata.query.internal.MetaDataQueryHelper.getEntity(MetaDataQueryHelper.java:66)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor$SymbolContribAggregator.create(JSPModelProcessor.java:783)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor$SymbolContribAggregator.access$0(JSPModelProcessor.java:775)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor.processSymbolContrib(JSPModelProcessor.java:536)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor.processAttributes(JSPModelProcessor.java:526)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor.recurseChildNodes(JSPModelProcessor.java:508)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor.refreshInternal(JSPModelProcessor.java:494)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor.access$3(JSPModelProcessor.java:476)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor$RefreshRunnable.run(JSPModelProcessor.java:449)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2317)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor.runOnCurrentThread(JSPModelProcessor.java:413)
	at org.eclipse.jst.jsf.designtime.internal.jsp.JSPModelProcessor.refresh(JSPModelProcessor.java:365)
	at org.eclipse.jst.jsf.designtime.internal.symbols.JSPTagVariableSymbolSourceProvider.getSymbols(JSPTagVariableSymbolSourceProvider.java:64)
	at org.eclipse.jst.jsf.designtime.context.DTJSPExternalContext.doGetMapForScope(DTJSPExternalContext.java:89)
	at org.eclipse.jst.jsf.designtime.context.AbstractDTExternalContext.getMapForScope(AbstractDTExternalContext.java:48)
	at org.eclipse.jst.jsf.designtime.context.AbstractDTExternalContext.getApplicationMap(AbstractDTExternalContext.java:82)
	at org.eclipse.jst.jsf.designtime.el.DefaultDTVariableResolver.resolveVariable(DefaultDTVariableResolver.java:79)
	at org.eclipse.jst.jsf.designtime.internal.symbols.ConfigBasedDTVariableResolver.resolveVariable(ConfigBasedDTVariableResolver.java:110)
	at org.eclipse.jst.jsf.designtime.resolver.SymbolContextResolver.getVariable(SymbolContextResolver.java:63)
	at org.eclipse.jst.jsf.core.internal.contentassist.el.SymbolResolveUtil.getSymbolForVariable(SymbolResolveUtil.java:58)
	at org.eclipse.jst.jsf.core.internal.contentassist.el.ContentAssistParser$PrefixVisitor.getSymbolInfo(ContentAssistParser.java:184)
	at org.eclipse.jst.jsf.core.internal.contentassist.el.ContentAssistParser.getSymbolInfo(ContentAssistParser.java:85)
	at org.eclipse.jst.jsf.ui.internal.jspeditor.JSPSourceUtil.determineSymbolInfo(JSPSourceUtil.java:105)
	at org.eclipse.jst.jsf.ui.internal.jspeditor.AbstractELHyperlinkDetector.detectHyperlinks(AbstractELHyperlinkDetector.java:70)
	at org.eclipse.jst.jsf.ui.internal.jspeditor.AbstractELHyperlinkDetector.detectHyperlinks(AbstractELHyperlinkDetector.java:57)
	at org.eclipse.ui.texteditor.HyperlinkDetectorRegistry$HyperlinkDetectorDelegate.detectHyperlinks(HyperlinkDetectorRegistry.java:81)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:289)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:262)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseMove(HyperlinkManager.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5745)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1427)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5013)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4507)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:153)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569122

Tab completion not working for DTD files. 

I have dita files like 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="version">
  <title>Version information</title>
</topic>

and try to get completion based on dtd to work.
It worked in eclispe 2019 very well with the same setup.

I have added all DTDs in the XML catalog, but they seem
to loose initial slash after closing / reopening the XML catalog prefs window.

I get after re-opening:
Entry element:		Public
Location:			usr/local/oxygen-xml/oxygen21.0/frameworks/dita/DITA-OT3.x/plugins/org.oasis-open.dita.v1_3/dtd/technicalContent/dtd/topic.dtd
URI:   				file:///usr/local/oxygen-xml/oxygen21.0/frameworks/dita/DITA-OT3.x/plugins/org.oasis-open.dita.v1_3/dtd/technicalContent/dtd/topic.dtd
Key type:			Public ID
Key:				-//OASIS//DTD DITA Topic//EN

where "Location" does not start with a "/". When opening the associated entry, i get "The specified source cant be loaded" in red.
When i fix it with adding a "/" at the front, hit "Ok", and "Aplly and Close", restart eclipse, the slash went away.

Dunno if this is the cause for the DTD completion not working in my document, but i dont get any other clues....

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569051

String jarPath = mainClass.getProtectionDomain().getCodeSource().getLocation().getPath();//get the path of the currently running jar
            	String filename = URLDecoder.decode(jarPath, "UTF-8").substring(1);

this code without the jar in jar loader will return the absolute path of your jar in eclipse. Once compiled with the option to embed libraries as jars in your jar it will now print "\" instead of the file. Also switching the option to embedding libraries instead of packaging the jars will fix the issue proving it's your jar in jar loader that's the issue. I understand you needed to modify the absolute path for jars that are inside of jars but, you shouldn't mess with jars that are actual files. Please fix this it's annoying to work around.

I had to do this as a workaround for my program
            	boolean compiled = getExtension(new File(filename)).equals("jar") || getMainClass().getName().equals("org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader");

Since this has to do with java jar in jar loader program it effects all os's and should be fixed asap

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569535

When I go to https://archive.eclipse.org/ with Firefox it shows the following message:

Did Not Connect: Potential Security Issue

Firefox detected a potential security threat and did not continue to archive.eclipse.org because this website requires a secure connection.

What can you do about it?

archive.eclipse.org has a security policy called HTTP Strict Transport Security (HSTS), which means that Firefox can only connect to it securely. You can’t add an exception to visit this site.

The issue is most likely with the website, and there is nothing you can do to resolve it.

If you are on a corporate network or using anti-virus software, you can reach out to the support teams for assistance. You can also notify the website’s administrator about the problem.

Error code: SEC_ERROR_UNKNOWN_ISSUER

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569073

Created attachment 284858 [details]
Example project to reproduce bug

I attached a simple project setup to reproduce. MultiSourceDirModuleProjectWorking is a standard HelloWorld example working as intended. MultiSourceDirModuleProjectBroken is almost the same with the difference that the module-info.java relies in an additional source directory.

If I try to launch the broken project via "Run as -> Java Application" I get a "java.lang.ClassNotFoundException: code.HelloWorld". If I edit the launch configuration  (even if I just change the name) I get the following error instead on launching:
Error occurred during initialization of boot layer
java.lang.module.FindException: Module MultiSourceDirModuleProjectBroken not found

I included the launch configurations where you can see that the broken project launch got a wrong module name configured.

PS: the problem seem to be that IPackageFragmentRoot.getModuleDescription() does not return a IModuleDescription for the broken project in JavaApplicationLaunchShortcut.getModuleName(IType). That's why I reported this for Core instead of Debug.

7498217498122 URL = https://bugs.eclipse.org/bugs/show_bug.cgi?id=569179

Created attachment 284889 [details]
System Theme

There are some issues in View Toolbars rendering in MacOS. Not sure if this is only on BigSur.

You can see the painting issue in the area we have the tool buttons in project explorer.

