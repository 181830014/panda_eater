The entire validation framework needs to be redesigned. This will entail (but not limited to):

1) Removing the primitive types. Bindings should be created for the external types that are now define in the EGL mof model that represent these types (such as AnyString). The defined operations/converters on these bindings will be used to do the validation (type compatibility, overloaded function resolution), etc.

2) Make much of the validation extensible. The various stereotypes and annotations for a given part/member should register validator classes that will be used to do the bulk of the validation work. This will enable EDT validation to be extended.


In addition, the refactoring framework will need to come over from RBD. Most (all?) of this framework is fairly general (update references, change package names, change imports, etc). Some rework will be needed since EDT will enforce 1 part per file.