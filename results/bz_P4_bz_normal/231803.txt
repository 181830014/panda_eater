Eclipse 3.4M7
Web Standards Tools 3.0M7

I'm putting this in the overall project bit bucket because it really affects all projects system wide in web standard tools.    The current code really needs a good round of refactoring in the next release, whether that is Web Tools 3.1 or Web Tools 4.0.    There are duplicated classes, classes that have long hard to read methods, duplicated methods, etc.

All of this leads to extra size, and memory usage that doesn't need to occur.   I know that when the term refactoring has been mentioned in the past, there has been a negative reaction by the committers, maybe it's because Web Tools doesn't have a enough unit tests to feel comfortable doing the refactoring.   When I'm referring to refactoring I'm referring to the following definiton:

Enhancing or improving the quality of code in a program. Refactoring does not alter the functionality of the software; but, it makes it more maintainable for future changes.

This means we aren't changing the functionality of the overall tool or public interface.  It does mean that we are redesigning/eliminating, and reducing the code and memory footprint of the overall design.    Many of Web Standard Tools classes are still marked as internal classes.   This means that its either time to make some of these provisional API (many haven't changed since 2006), or allow for the removal of deprecated classes and code, as well as the complete elimination of classes that may be refactored out.   The sooner this is done in the 3.1/4.0 series the better, as it gives adopters plenty of time to adjust to the changes.

The longer this is delayed the more hesitation/resistance there will appear to be to touching it.  If we are uncomfortable messing with the code because we are concerned about breaking functionality, then that is the first sign that refactoring needs to occur.   It will also encourage a better unit test suite going forward.