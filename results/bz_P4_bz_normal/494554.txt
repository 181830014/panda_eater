Now when the double-click navigation is in place, see Bug 476953, then the opposite kind of navigation becomes useful as well.

Traditionally in the legacy tooling you have a "Go Outside..."-navigation when you are inside a capsule (and also inside a composite state). This navigation will then locate capsule part(s) that is typed by the current capsule from which you select the "Go Outside..."-navigation. 

1) If no capsule part typed by this capsule is located, then nothing happens in the legacy tooling. It could be discussed if a dialog should popup instead to make it more clear that "no outside" could be found, i.e. no capsule part typed by this capsule could be found. See additional comment below as well.

2) If one, and only one, capsule part typed by this capsule is found, then the capsule structure diagram where this capsule part is located shall be opened and the capsule part shall be selected.

3) If two, or more, capsule parts typed by this capsule is found, then a browse dialog with the identified capsules (including the parent package structure) shall be presented to the user so that the user can select in which "context" the user wants to navigate to.


In the legacy tooling the identification of the "outside" can be done either in models only loaded into memory, but it can also be done on non-loaded models and model-fragments in the workspace (using an index-based search). 

I guess that since no similar index-based searching is still in place in Papyrus, it could initially be sufficient to only perform the identification of any capsule parts on model(s) loaded into memory. And then the case when no "outside" found, i.e. case 1) above, could be solved by simply disabling the "Go Outside..." menu choice on the Navigate submenu when right clicking on a capsule structure diagram, to make it clear to the user that no "outside" exist in the model.