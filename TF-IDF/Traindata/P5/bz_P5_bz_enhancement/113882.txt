The Java search scope is currently a workspace scope.  Users therefore can 
only see types from plugins the target platform in the Open Type dialog only 
if one of their plug-in references that external plugin.

So if I'm a runtime developer and only have the core.runtime plugins in my 
workspace, there is no way for me to browse full type hierarchies on JDT 
classes or PDE classes.

Importing the entire universe in my workspace, just so I could see the types 
and create type hierarchies, is not a scalable option.

PDE currently has a workaround which is the 'Add to java Search' functionality 
where we create a fake workspace project that references external JARs.
Users always voice their concerns why they have to do all that to see a class 
in the target platform.

I suggest JDT to enable extending the java search scope via an extension point 
(a la search/refactoring participant).