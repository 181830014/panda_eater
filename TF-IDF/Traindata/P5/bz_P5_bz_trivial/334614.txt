When all Java warnings are enabled together with Checkstyle, there are many warnings. These should be fixed.

For generated code (by EMF or Acceleo for example) where we can't fix the generator, we should disable the warnings.

For projects containing only generated code, the warnings can be deactivated at the project level.

For packages containing only generated code, the checkstyle warnings can be deactivated at the package level (by specifying a rule in the project's .checkstyle file).

For projects that contain some generated classes together with hand-written code, we don't want to disable the warnings because they are still useful for the non-generated code. In this case, we can add @SuppressWarnings("all") on the generated classes.