Title: How can I collapse all #regions and methods in c#?
Description: 
    
    
                    
it is very annoying to collapse all one by one...
    

        
Answer 1: 

    
    
Like Steve said, CTRL + M plus CTRL + L for collapsing all regions recursively. This one is a toggle, meaning you can do it again to re-open them.

Do CTRL + M plus CTRL + O to collapse all regions non-recursively.

Source: http://weblogs.asp.net/mrdave/archive/2004/09/17/230732.aspx
    
    
Answer 2: 

    
    


Collapsing and Openning recursively: Ctrl+M+L

Just Collapsing: Ctrl+M+O

Just Openning: Ctrl+M+P



    
    
Answer 3: 

    
    
Quickest way will be to collapse to definitions via Ctrl+M, Ctrl+O. That will collapse all code down to the signature lines.
    
    
Answer 4: 

    
    
right click -
Answer 5: 

    
    
CTRL + M, CTRL + L


This will also collapse anything that is collapsible too, such as scopes defined by braces.
    
    
Title: Using Vi, Vim, or GVim as an IDE
Description: 
    
    
                    
I am forced to use VS2008 for the bulk of my projects at work, but whenever the odd text file needs editing I use Vim.

Now I know that there are plugins and whatnot that can make VIM work like an IDE, so I am wondering if anyone actually uses it as an IDE?

EDIT:

For those of you who think you speak for the masses in saying that Vim should not be used as an IDE, please consider that IDE features are the number one feature request on the official feature request list on vim.org.
    

        
Answer 1: 

    
    
Vim is an amazing piece of software, but pretty messy too due to it's age. Vi was released in 1976 and Vim was released in 1991. For example, Vim offers quite a few different ways to do text-completion, from simple keyword to its "omni" completion system. On top of that, some plugins choose to work with the inbuilt functionality, while others just replace it wholesale. Hopefully the following suggestions get you started though.

IDE with Vim

You may want to try this new patch for Vim which allows Vim to be used inside Visual Studio as the editor:


ViVim


Vundle

Firstly, install the Vundle plugin manager plugin for Vim! It works very well and makes managing Vim plugins easy. Handles installation, updates and removal.

For example, your .vimrc now just contains:

" === Plugins! ===
Plugin 'junegunn/fzf'
Plugin 'scrooloose/nerdtree'
Plugin 'w0rp/ale'
...


And a PluginUpdate command will install them or update them.

Plugins for a Vim-IDE

The following vim scripts give Vim more of an IDE feel. Keep in mind that Vim has a huge number of features built in, so take time to learn those (which is an ongoing journey) before loading up 20 plugins.

Highest impact plugins for me are fzf and ALE. You'll want to install fzf and ripgrep.

Navigation:


FZF - Favorite plugin, awesome filesystem navigation and text-search
Nerd Tree - Filesystem navigation
Command-T - Search a project by filename to open, would recommend FZF instead
CtrlP - An alternative to Command-T, fuzzy file and buffer searching. Generally slower, but doesn't require compilation
Tag Bar - Code navigation by functions
Bookmarking - Bookmarks for vim (my own plugin :))


Text Completion:


delimitMate - Automatic closing of parentheses, braces.. etc
tcomment - Easy comment/uncomment source code commands
Ultisnips - Great Vim snippets system
YouCompleteMe - Code completion, lots of features
neocomplete - Slightly simpler code completion than YCM


I personally find code-completion too much and just rely on Vim's builtin CTRL-N text-completion feature, up to you, but remember CTRL-N! Vim's built-in completion system extends beyond that, with different completion modes such as filename completion with CTRL-X CTRL-F or "omni-completion", which tries to offer file-type specific context dependent completion through CTRL-X CTRL-O. Omni-completion requires file-type specific plugins, the vim-go package for Golang supports it.

Formatting:


tabular - Align text easily
vim-surround - Quickly surround some text (i.e., brackets, tags...)


Just awesome:


ALE - Live syntax checking for many languages, supports Vim 8's new features such as asynchronous jobs to ensure it doesn't freeze up Vim while running.
fugitive - Git within vim, diffs, blame... etc
gitgutter - Live diff from git committed version of file
YankRing - Easy access to previously copied or deleted text objects


Better GUI:


Airline - Easier to read status line with more useful information
Gundo - Visualize vim undo history as a tree (my favorite, make sure you turn on persistent undo in Vim)


Color schemes:


solarized - Great color scheme


Vim Distributions

Rather than go through the setup and configuration yourself, you can use the following projects to get going quickly with a more IDE like Vim. The two projects below include many of the plugins I mention above:


Janus
spf13


I recommend you don't use them though. You'll learn much more if you take the time to configure vim yourself and install plugins in a staggered process to learn each one well.

Vim Plugin Guides

VimAwesome can be a good place to browse for Vim plugins and find useful and popular ones.

Vim Patches

In addition to those scripts you may want to look at some of the following patches for Vim. I haven't used them so not sure of the quality but most of them look quite promising. You can view all the patches here, the ones that make vim more of an IDE are:


Code Check - On-the-fly code checking (note: Syntastic is a better choice these days).
Clewn - Allows debugging and stepping through the code in Vim using GDB.


With those scripts and patches installed, you should have something in Vim pretty close in features to Visual Studio or Eclipse.
    
    
Answer 2: 

    
    
You can also go the other way around and use a plugin called viemu.  This one gives you vi-mode within the VS IDE, which makes it easier for colleagues to co-drive on your system.
    
    
Answer 3: 

    
    
I'm not trying to be inflammatory with this response, but I want to save you some headache. This is the same answer I give to all the people that ask similar questions in #vim.

Vim is not an IDE. It's an editor. It was never intended to be an IDE, and any attempts to make it conform to this will only cause you problems. There are some plugins that try to provide an IDE-like feel to Vim, but these are horrible.

I do, on the other hand, recommend some plugins that will help you get some extended functionality from Vim. These might suit your needs.


taglist - Great for navigating your code by function/method/class
NERDTree - A wonderful filesystem navigation plugin

    
    
Answer 4: 

    
    
Taglist is a wonderful plugin--don't leave home without it.

You can also set up tab completion.

Omnicompletion is a great thing if your language is supported.

And VIM tip 1439 has a roundup of IDE-ification tips.
    
    
Answer 5: 

    
    
If you use Linux, just try Pida. You can embed Vim or Emacs into it. A lot of integrations such as file browser, project structure, and console, make Vim look like Eclipse. IMHO, this is an easy way to use Vim as an IDE.
    
    
Answer 6: 

    
    
VIM has first-class support for C and C++ as an IDE. You even have a visual debugger with clewn and gdb. Other languages, you will have to do some tweaking and fiddling and the result might not get to what you want. Worth trying for an hour and seeing how it goes. 

I get the impression that emacs does a better job as IDE for more languages.
    
    
Answer 7: 

    
    
try exVim in http://code.google.com/p/exvim
This project make vim as a IDE for multi-language developing.
    
    
Answer 8: 

    
    
I sometimes use Vim as an IDE within Kate when I otherwise would have had several tabs open in Vim, which are hard to change to.

Else, I stick with plain ordinary Vim.

KDE for Windows will allow you to install Kate in Windows.
    
    
Answer 9: 

    
    
I use Vim alone - it has some basic ability to autocomplete via ^X then various options (^P for Keyword, ^O for omnicomplete (good for switching between HTML, CSS, and so on in web files).

It also has the ability to launch commands via :!(compiler or other commands).

Fairly simple, painless integration with basic development with no need for workspaces or similar - and modelines for file settings if desired.

Edit: As far as modules are concerned, there are usually modules to embed relevant scripting languages inside or beside the Vim enviroment - I don't know about similar .NET framework modules, however.
    
    
Answer 10: 

    
    
I ran into gvide today while looking at O.T. Android NDK stuff— long time user of vim, have used eclim in eclipse, but frankly my vim environment is for writing code, not developing code. It was really interesting reading about different twists to make vim a development env, and gvide has some compelling stuff—

http://www.crystax.net/en/gvide
    
    
Answer 11: 

    
    
Also these comments are quite dependent on the year that they were written. So these are my thoughts for Vim as an IDE in 2018.
The Language Server Protocol has been growing in importance and Sourcegraph have been popularising it through their master plan.
This is the major reason why ALE (Asynchronous Linting Engine) is so important because it implements the LSP. So it also offers Go-to-definition, code completion and hover information. I have only just started using it for linting and I haven't delved into the other features but I think it has massive promise to offer a lot of what is expected from an IDE.
But pretty much everything generic from Tim Pope + FZF + Ripgrep + ALE will get you a very powerful editor.
Frankly an 'Everything Tim Pope' editor is one of the best starting points you can have for a Vim IDE (I even created vim-tim just for that).
The only places I differ slightly from David Terei's excellent answer:

Basics: Tim Pope's Obsession is a fundamental to save the buffers that you've got open
Navigation: FZF + Tim Pope's Vinegar + using buffers as they're fully intended
Text Completion: Supertab (ALE should be able to be used for this)
Jump to definition: Universal Ctags (again ALE should be able to be used for this), when Ctags fails Ripgrep is awesome beyond words

You should be careful in installing IDE plugins they can very easily impact Vim's performance.
Potential benefits over other IDEs
It's worth noting how flexible Vim allows you to be with setting up your code base. Where as many IDEs only work on the project level, you can create a parent folder across many Git repos, FZF and Ripgrep are so powerful that they'll consume huge code bases and hardly slow down when searching across them. With Ctags you can build up the index across repo boundaries. This is actually fills a couple of uncommon points in Sourcegraph's checklist for intelligent editors (I think Vim is able to fulfil all points that most current IDEs do beyond these):


Does your jump-to-def work across repository boundaries?

Can you search over all of your code and dependencies in one place?



Using Vim's buffers allows you to have 100s of buffers open with no cluttering of the UI or reduction in performance. Typing :b some-buffer-text and then Tab allows you to autocomplete buffer names easily. I also use the following line taken from another answer which allows listing all buffers and printing the buffer command to allow you to quickly switch to another via its number:
nnoremap &lt;leader&gt;bb :buffers&lt;cr&gt;:b&lt;space&gt;

Tim Pope has a novel recent database dadbod plugin, that gives you similar powers that you have in Microsoft's Database Management Studio.
    
    
Title: What does the A stand for in Intellij IDEA?
Description: 
    
    
                    
Does anyone know what the acronym IDEA stand for?
I would assume Integrated Development Environment, then maybe Application?
Also does Intellij stand for anything?
    

        
Answer 1: 

    
    
Intelli  ===/pp
Answer 2: 

    
    
Maxim Shafirov (the CEO of JetBrains), made the following comment prior to 2005, in a now deleted official JetBrains news article, published online:


  I have always thought that it's a play on words that (1) it's an IDE,
  and (2) "idea" is a nice sounding word which contains "IDE".


Reference:

https://intellij-support.jetbrains.com/hc/en-us/community/posts/206938805-IDEA-acronym-?page=1#community_comment_207115259

So, based on the only thing I've seen that looks like actual evidence, I think a good answer may be "it probably isn't intended to mean anything"
    
    
Answer 3: 

    
    
It stands for application, but is mostly a play on words giving the IDE's name a creative appeal by just turning the widely-used 'IDE' (Integrated Development Environment) into IDEA (like "I have a brilliant idea!").
    
    
Answer 4: 

    
    
What about Android? On the main page it describes Intellij as "the Java IDE with the fastest...,new tools for Android development..."
    
    
Answer 5: 

    
    
I think it refers to APache2 license that intellij ide released under that license so will be : Integrated Development Environment Apache
    
    
Answer 6: 

    
    
IntelliJ IDEA is an IDE written in Java.
IDE = integrated development environment
IDEA = integrated development environment Amplification
    
    
Title: Eclipse plugin for Objective-C?
Description: 
    
    
                    
I'm going to learn Objective-C, and I was wondering if there was an eclipse plugin out there to do things like syntax highlighting and easy compiling/project management. I did some preliminary searching, but I couldn't find anything.

What's my best I can do for an IDE?

I don't have a mac.
    

        
Answer 1: 

    
    
for Objective-C the best is Xcode - if you have a Mac.  There are some other IDEs out there like KDevelop that offer support for other OSes.  The only thing I have seen for Eclipse is objectiveeclipse, but I do not have any experience with it.
    
    
Answer 2: 

    
    
The other answers provide pretty good direct answers. However, my first instinct is to jump to the meta-question: "What is your reason for learning Objective-C?" The reason I'd ask that is because the guidance I'd give depends greatly on your motivations. For example...


You have heard that Objective-C is a powerful language and want to see if using it will make your programs cooler, easier to write, whatever. I'll be frank — unless you're planning to eventually do Mac/iOS development, there's little point in learning Objective-C, other than academic curiosity. I'm a longtime Apple guy, and I love Objective-C, but if you are on another operating system, and plan to stay on it for the foreseeable future, there's little point. Objective-C has some extremely cool features, but the benefits of the language itself are generally not compelling for most people. It becomes very powerful when coupled with the Cocoa frameworks provided by Apple. GNUstep provides a degree of interoperability, but if you're going cross-platform, there are better options.
You're planning to write Mac/iOS software, but don't have a Mac yet. If you're at all serious, I recommend getting a Mac sooner rather than later. While you can learn Objective-C using an IDE on another platform, nearly all Objective-C tutorials and books assume a Mac environment. There will be practically zero support for third-party tools, especially on the forums and lists that are likely to be most helpful to you when learning. (Of course, I recommend at least considering a Mac to anyone, not just people learning Objective-C. You can dual-boot to Windows if needed, so it's a more flexible development investment. Still, I know not everyone can drop cash for a new Mac.)
You're planning to write Mac/iOS software, but want to do it all from a PC. If this were the case, I'd suggest stopping now and re-evaluating priorities, for several reasons. 


Apple's tools are the best tools for developing Mac/iOS apps, bar none. Not developing on a Mac puts you at a huge disadvantage. Imagine trying to develop .NET software in Eclipse, KDevelop, or emacs. It may be possible, but it's not a smart way to do things.
Unless you use a Mac regularly, you'll never understand what a good Mac app feels like, or how to design one. Consequently, you'd be likely to get user complaints over issues that may not make sense to you, and ill-equipped to address them.
Third-party support for Objective-C and Cocoa will always lag behind that of Apple, and have a different set of bugs. You won't get the best experience, and neither will users. Coding for two Objective-C implementations is likely to drive you nuts in record time.
Most non-Mac people don't care about Objective-C, so language plugins and compilation support are unlikely to be well-developed, let alone exist in the first place. Aside from the code editor, you'd need libraries to compile and link against. Again, Xcode is the gold standard for Objective-C. Besides, project setup and administration in Eclipse is a pain even for Java.



I realize this doesn't directly answer your question, but I hope it provides some insight, whether to the asker or to someone else in the same situation. Cheers!
    
    
Answer 3: 

    
    

I tried for some time to use my MS Windows/Eclipse based environments for developing iPhone/Objective-C apps. I gave up.
I tried for some time to build a reasonable hackintosh (up to my abilities... apparently fairly limited on this)... but on 2009 I gave up. (apparently now there are better tutorials/it is easier to do it?)
I figured out that if I bought an iMac and use all the previously listed time developing iOS apps, I would be rich. So I bought a Mac.
Obviously I am not rich now. But at least a happy Mac user ;-)


One note aside, I noticed that even some Eclipse plugin project (for Objective-C development) I was hoping was going to take-off, was shut down.

Get a Mac. Or enjoy the process of not getting it.
After all, it's the journey, not the destination.

-- Jorge
    
    
Answer 4: 

    
    
If you don't have a Mac and want to learn Objective-C on Windows you should have a look at GNUstep (http://www.gnustep.org/). I think you get packages for Windows and it comes with an IDE. GNUstep contains a lot of the Cocoa classes so it might be relatively easy to get started. When I tried GNUstep on Windows a while back it was quite buggy for me, though.

A text editor you could try is E (http://www.e-texteditor.com/index.html). It's a clone of TextMate (a popular editor on the Mac) and you can install bundles for all sorts of things, including Objective-C support. (http://svn.textmate.org/trunk/Bundles/). You get a free trial, so maybe just give it a shot.

I hope that helps. I have hardly done any Objective-C programming on Windows, but that's what I would look at first, GNUstep and possibly E.
    
    
Answer 5: 

    
    
Try some online compilers, if u just want to pick up Obj-C's syntax alone:

http://ideone.com

There should be a lot more online, try to search "online compilers objective-c" w/ ur fav search engine
    
    
Answer 6: 

    
    
For thoese who want to develop on a Mac, AppCode from jetBrains is the best I suppose.
    
    
Answer 7: 

    
    
I once tried to pull together an open-source, iPod/iPhone development environment, but the process took too long and gave up eventually. I got a Mac instead. From there, the tools were free and I started thinking and coding in Objective-C.

I spotted a book about open-source software development (under Linux). Publisher is good ol' O`Reilly. Might worth having a look. 

On a similar thread of thoughts, writing up apps in Objective-C for Linux could bring a greater acceptance of the language and framework. For now, it is reserved indeed for those interested in app development for Mac or iPhone/iPad/iPod devices. 

In addition, if the objective-C runtime module is light enough, it might be suitable for game console homebrews too: I wrote an app for Nintendo`s DS console and ended up writing lots of C++ lines of codes. I feel it could have been done with less coding with ObjC, and an encapsulated version of libnds, but, to my knowledge, GNUStep hasn't been ported to the DS Open Source toolchain yet (www.devkitpro.org). 

Happy Coding!
    
    
Answer 8: 

    
    
you can install GNUStep and then program on eclipse (requires to install CDT on eclipse), here  is a detailed video clip about how exactly to do that (worked for me)
    
    
Answer 9: 

    
    
tl;dr : http://code.google.com/p/objectiveclipse/  

project has closed down though.  but it's still there ready to be used.
    
    
Answer 10: 

    
    
Edit:

Here is an article talking about setting up an ojective-c environment in windows, it said only GNUstep MSYS System and the GNUStep Core package are needed:
http://www.tutorialspoint.com/objective_c/objective_c_environment_setup.htm



Recently I found out that Mingw includes the objective-c package of gcc (http://mingw.org/wiki/MinGW) - Mingw is a windows port of GCC, the latter includes support of many languages (C, java, fortran)

You can try it, though I haven't do so before. However, be prepared that some libraries might not be supported, especially those that are UI-related.It might be a good idea to look at info about gcc's supprot of objective c to have an idea in what extent does mingw supports objective-c. But for this issue, you might like to look at https://stackoverflow.com/a/9196196/214728
    
    
Title: Is there syntax highlighting for assembly in Sublime Text 2?
Description: 
    
    
                    
I'm unable to highlight my assembly.
    

        
Answer 1: 

    
    
No, but since Sublime Text 2 can read Textmate language definition files (.tmLanguage files), you could easily add support to Assembly by copying something like https://github.com/foxostro/x86-assembly-textmate-bundle to your "Packages" directory (C:\Users\hugo\AppData\Roaming\Sublime Text 2\Packages on my Win7).
    
    
Answer 2: 

    
    
There is now a much better answer to this:

In Sublime Text, just go to Preferences 
Answer 3: 

    
    
I've found another one Assembly x86 syntax definition.  

It seems that this guy had done a huge amount of work, and keeps the syntax updated. At least at the time of writing the last change was 9 days ago.  

He has also this post on Sublime forum.
    
    
Answer 4: 

    
    
GNU Assembler (GAS) x86(-64) syntax:
I know there's a chosen answer, but for anyone else who comes here in the future, you have to specify which syntax/machine you want. Assembly comes in a lot of different flavors for a lot of different machines. Other answers have given Intel x86, NASM, SPARC, and MIPS. When I visited this page back in 2014, I was looking for a good GAS/AT&amp;T syntax def for x86, which I never found.
So naturally, I made my own. It's really an x64 highlighter, but of course that includes x86 too.
It's also on Package Control. To find it, type &quot;gasx&quot; into the search field.
I also ported it over to Atom (available from Atom packages), Vim, and Gedit.
    
    
Answer 5: 

    
    
Like others, I noticed a distinct lack of SPARC syntax highlighting in Sublime Text 2, so I rolled my own. It's fully functional, and has its very own entry in Will Bond's Package Control. With Package Control installed, you can install my package in Sublime via Ctrl+Shift+P -&gt; Package Control: Install Package -&gt; SPARC Assembly Syntax.

Complete install instructions and usage tips are available on the Github project page.
    
    
Answer 6: 

    
    
Old question, but there is this one: https://packagecontrol.io/packages/NASM%20x86%20Assembly
    
    
Answer 7: 

    
    
I know the question was for Sublime 2, but if you want a nice highlighter
I'm using the MasmAssembly on Sublime 3 and found that its quite good. It highlights even ZMMs registers and the lastests SSE instructions.

You can install it using the package control plugin, nevetheless here is the repository: 
https://packagecontrol.io/packages/MasmAssembly
    
    
Title: How can Visual Studio shortcut keys be used in Android Studio?
Description: 
    
    
                    
I am very familiar with the Visual Studio IDE, and am new to working with Android Studio. Is there a way to configure Android Studio so that the keyboard shortcuts that I'm used to from Visual Studio can be used in Android Studio?
    

        
Answer 1: 

    
    
Yes, this is possible.

For newer Android Studio Versions

This approach works on at least Android Studio v1.3 and later (per @Dazzibao's comment)

From the menu, select File | Settings. Select the Keymap option on the left, then from the Keymaps drop-down, select "Visual Studio". The defined shortcuts are then updated to Visual Studio settings.

Further customizations are able to be made, and applied. To export these settings, from the menu, choose File | Export Settings, and then select Key Maps, select a file, and save. These can be restored via File | Import Settings in the same way.

Note: Many of the shortcut keys that I was used to using C# are not set to be the same values using this method. Try the second approach (below) if not satisfied with Android Studio's "Visual Studio" key map assignments.

For older Android Studio Versions

The same approach has been documented here for the IntelliJ IDE, and also works for Android Studio. It involves downloading a .jar settings file intended for Resharper users, and importing it into Android Studio.


Navigate to: https://github.com/hhariri/Tidbits/blob/master/resharper.jar
Click "View Raw" to download the resharper.jar file
In Android Studio, import the settings: File -&gt; Import Settings -&gt; &lt;fullPathTo&gt;/resharper.jar


Keyboard shortcuts are now as they would be in Visual Studio. For example, from the Run menu, review the debug control flow shortcuts:


    
    
Title: How do I indent multiple lines at once in Notepad++?
Description: 
    
    
                    
In many text editors that are aimed at programmers, if the user has a selection that spans more than 1 line and presses the TAB key, those lines are indented by 1 TAB (or a number of spaces, depending on how the editor is configured).

However, this does not seem to be the default behavior of Notepad++. Is there a way I can do this in Notepad++, or is there a plugin that I can get to allow me to do this?

Edit: Upon additional testing, SHIFT-TAB correctly un-indents the lines as expected, but only a tab simply inserts a tab wherever the carat is. This is in version 5.4.5 Unicode
    

        
Answer 1: 

    
    
The problem was with the QuickText plugin. After removing it, indent worked as normal.
    
    
Answer 2: 

    
    
The problem with the new version of QuickText seems to be that it is set to react to the TAB key.  Previously it was set to use CTRL-ENTER.  If you change the key combination in the shortcut mapper then your TAB key should start working again, and QuickText should also work (with whatever new key you've assigned).
    
    
Answer 3: 

    
    
Capslock + Tab to indent multiple lines at once. Highlight the text first.
    
    
Answer 4: 

    
    
It works fine for my v. 5.4.5 of Notepad++.  I just select multiple lines and press TAB.

If you want TAB to be replaced by SPACE than you need to go Settings /ppstrong/strong
Answer 5: 

    
    
If you're using QuickText and like pressing Tab for it, you can otherwise change the indentation key.

Go Settings 
Answer 6: 

    
    
I have Notepad++ 5.3.1 (UNICODE). I haven't done any magic and it works fine for me as described by you.

Maybe it depends on the (programming/markup/...) "Language"?
    
    
Answer 7: 

    
    
Just install the NppAutoIndent plug-in, select Plugins 
Answer 8: 

    
    
Notepad++ will only auto-insert subsequent indents if you manually indent the first line in a block; otherwise you can re-indent your code after the fact using TextFX 
Answer 9: 

    
    
in Notepad++v6.1.8 (Unicode) it works after removing the QuickText plugin.
    
    
Title: Android Studio Logcat colors best practice
Description: 
    
    
                    
It is really hard to follow up Android logcat output all in a same color.
is there any best practice for changing different logs color?
    

        
Answer 1: 

    
    
I know that using solid black color logcat in Android Studio is awful!!!

Here is my best practice colour codes that you can use for changing the face of you logcat in Android Studio to make it more useful.

Go to Android Studio Preferences and search for logcat and 'Save As' your own scheme:

Assert: 9C27B0

Debug: 2196F3

Error: F44336

Info: 4CAF50

Warning: FFC107





All colors are picked carefully from google Material Design palette and can help you with more readability in both Default and Darcula theme:

sharing is caring :)
    
    
Answer 2: 

    
    
In addition to @Monsen Mirhoseine's answer, I exported his scheme to easier import.
You can do it by downloading this file, and then selecting to avoid typing every color.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    
    
Answer 3: 

    
    
You can download this files filesCustomAndroid and copy in 

Mac: /Users/.../Library/Preferences/AndroidStudioXX.XX/
Windows: C:\Users....AndroidStudioXX.XX\config\

Then go to logcat in settings and choose the file.
    
    
Title: Scala console won&#39;t work, IntelliJ
Description: 
    
    
                    
I did all the preference work, installed scala, everything works except this, i just can not test a scala class in the console window. 

In tutorials I see they just type in something behind the scala/pp/p/div
Answer 1: 

    
    
Once you type on the Scala console in IntelliJ Community Edition. Hit Ctrl+Enter instead of enter to execute.

took me a while to get around it :)


  
    
      IntelliJ &amp; Working with Scala Worksheet
    
  

    
    
Answer 2: 

    
    
If you want the console to execute when you hit enter, go to Preferences &gt; Keymap &gt; Plug-ins &gt; Scala, and right-click ScalaConsole.Execute. Select Add Bookmark and hit enter in the first box. Then click Apply and then OK.

    
    
Answer 3: 

    
    
You have to press ⌘-Enter on Mac OS X when you're done typing.
    
    
Answer 4: 

    
    
I guess it's better to change the message from 
"Type in expressions to have them evaluated."
to 
"Type in expressions and press Ctrl + Enter to have them evaluated."
    
    
Answer 5: 

    
    
Just add scala sources to $PATH and it should be available / callable from CMD / Idea Terminal
    
    
Title: PyCharm IDE how can I change font size with out zooming with mouse scroll
Description: 
    
    
                    
As title says, how can I change the font size in editor by some value. I like the scrolling thing, but the problem is I have to scroll again and every time I open an IDE again.

I found the settings for changing the value of the font size, but it's disabled. Do I have to pay for that feature ?
    

        
Answer 1: 

    
    

version 2017.1 and older -- Settings/Preferences | Editor | Colors &amp; Fonts | Font
since 2017.2 -- Settings/Preferences | Editor |  Color Scheme | Color Scheme Font



  I found the settings for changing the value of the font size, but it's disabled.


It's disabled because it is not allowed to edit bundled scheme. To "enable" it just create your own scheme based on any of the bundled ones (click the "Save As" button next to Scheme Name): 



Once you've done that you can alter any of the color/style settings.



If you have somehow increased (or decreased) the font size dynamically via shortcut then just use the "Reset Font Size" action. You can assign any shortcut to those actions at Settings/Preferences | Keymap:



You can also call that action directly via Help | Find Action...:


    
    
Answer 2: 

    
    
Adding Keyboard Shortcut for font zooming pycharm


File --strong/strong/lilistrong/strong/lilipstrong/strongstrong/strongstrong/strong/ppem/em/p/lili/li/ol/div
Answer 3: 

    
    
Quick answer:
In 2018/2017 version:

File --&gt; Settings...
In left side expand Editor --&gt; Font
Change Size value.
Apply + OK


    
    
Answer 4: 

    
    
For Mac

To edit Font size, do the following:

Click PyCharm | Preferences from the main menu, and then go to Editor | Font.
    
    
Answer 5: 

    
    
If you have a custom theme you may need to do it in the theme's settings page.
Editor -
Answer 6: 

    
    
Using shortcut
In windows Ctrl+Alt+S brings Setting window for Pycharm straightaway, then on left hand side you can click on font tab, and increase or decrease size of font as you like. It changes font size of code that you actually write inside PyCharm IDE.
    
    
Title: Published interface properties bug and workarounds
Description: 
    
    
                    
I wrote a set of components that link to each other via published interface properties. They are registered and installed in a design package.

Using published interface properties is not that common in Delphi, and thus, unsurprisingly, doesn't seem to work that well.

It works fine when components reside on the same form, however interface property links between components on different forms cause issues.

Unlike object links to components on another form, interface links don't seem to be recognized by IDE. What I mean is best described by an example, when you have 2 forms open in IDE, and have links between components on them, then trying to switch to form view as text (Alt+F12) would cause IDE to correctly complain that:

Module 'UnitXXX.pas' has open descendents or linked modules. Cannot close.

But if the property is an interface then this does not happen, what happens instead is that the link is severed (and that's the best case scenario when you use Notification mechanism to clear references, otherwise you're left with an invalid pointer)

Another problem, likely as a consequence of the same bug is that when you open a project in IDE, the order in which forms will be reopened is undefined, so IDE can try to open a form that contains components that have interface links to components on another form, but that other form is not recreated yet. So this effectively results in either AV or severed links.

Back in 90s while I used Datasets and Datasources I remember similar issues with links between forms disappearing, so this is somewhat similar.

As a temp workaround I added duplicate published properties, for each Interface property I added another that is declared as TComponent. This makes Delphi aware there is a link between forms, but is an ugly workaround to say the least.

So I wonder if there is something I can do to fix this issue ? It's an IDE bug and likely not fixable directly, but perhaps I can override something or otherwise hook in to streaming mechanism to more effectively workaround this bug.

I haven't ever gone so deep into streaming mechanism, but I suspect the Fixup mechanism is supposed to deal with this. There is a csFixups TComponentState so I hope a workaround is possible.

Edit: Using D2007.

Update:

New updated reproducible example uploaded to http://www.filedropper.com/fixupbugproject2

Added property ComponentReference: TComponent so that it's easy to compare and trace interface vs component streaming.

I narrowed the problem down to assembler level which is a bit out of my depth.

In procedure GlobalFixupReferences in classes unit it calls:

(GetOrdProp(FInstance, FPropInfo) &lt;&gt; 0)

which eventually executes:

function TInterfacedComponent.GetInterfaceReference: IInterface;
begin
// uncomment the code bellow to avoid exception
{  if (csLoading in ComponentState) and (FInterfaceReference = nil) then
  // leave result unassigned to avoid exception
  else
}
    result := FInterfaceReference; // &lt;----- Exception happens here
end;


As you can see from the comment, the only way I found to avoid the exception is to leave the result unassigned, but that breaks the functionality since comparison above in GlobalFixupReferences fails due to GetOrdProp &lt;&gt; 0, which severes the link.

tracing deeper the more exact location of exception is in

procedure _IntfCopy(var Dest: IInterface; const Source: IInterface); in system unit

This line in particular raises an read of address 0x80000000

{   Now we're into the less common cases.  }
@@NilSource:
        MOV     ECX, [EAX]      // get current value


So, why MOV fails and what's wrong with ECX or EAX I have no idea.
    

        
Answer 1: 

    
    
To summarize, the problem happens only with published interface properties that have a getter method, and the property points to component on another form/module (and that form/module is not recreated yet). In such case restoring form DFM causes an AV.

I'm pretty sure the bug is in the ASM code in GetOrdProp, but it's beyond my ability to fix, so the 
easiest workaround is to use a Field instead of a getter method and read it directly in the property. This is, fortunately good enough for my case currently.

Alternatively, you can declare the property as TComponent instead of interface, then write a TComponentProperty descendant, override ComponentMayBeSetTo to filter component that don't support the required interface. And of course register it using RegisterPropertyEditor
    
    
Title: Error(1,1)illegalcharacter &#39;\ufeff&#39; when compiling on android studio
Description: 
    
    
                    
I got an Eclipse project source code(I was told that on Android Studio, maybe they just confused), and I start to migrating the code to android studio refers to 


  http://developer.android.com/sdk/installing/migrate.html 


But it doesn't work.
so I import the project from path directly and it transfers to the android-studio project automatically, but still, something wrong when I am compiling.


  Error:(1, 1) error: illegalcharacter: '\ufeff'


the error position refers to 


  package com.bla.blabla;


Please help me, thanks
    

        
Answer 1: 

    
    
That's a problem related to BOM (Byte Order Mark) character. Byte Order Mark
BOM is a Unicode character used for defining a text file byte order and comes in the start of the file. Eclipse doesn't allow this character at the start of your file, so you must delete it. For this purpose, use a rich text editor, such as Notepad++, and save the file with encoding &quot;UTF-8 without BOM.&quot; That should remove the problem.
    
    
Answer 2: 

    
    


On lower-right corner, you can set the file encoding. Select another option than UTF-8

If a popup appear, choose the option Convert.
    
    
Answer 3: 

    
    
As Marcelo told, I changed file Encoding option to UTF-16. Ran it, But didn't work. Again changed to UTF-8 and Converted it. It ran successfully. If above solution doesn't work, try this.
    
    
Answer 4: 

    
    
At bottom right of the project change file encoding UTF-8 to UTF-16.


A new dialog will get open. Select convert it and run it.
It will give you some errors then again change UTF-16 to UTF-8.
Convert it and run the project. This time your project will run successfully. 

    
    
Answer 5: 

    
    
i solved this problem with this method : 


ctrl + A in my activity and copy all codes
delete YourClass.java
create YourClass.java
paste all code in new java class


This method work for me. tnx
    
    
Answer 6: 

    
    
I was facing this error in intelliJ-2016.1.2.

Thank you @Darsh for your help, 
I did same thing, first changed to UTF-16 (i.e convert into UTF-16) and compiled the code. it didn't work, then again changed back to the UTF-8, this time it worked fine.

Thank you.
    
    
Answer 7: 

    
    
Above are great solutions. However, if none of them works, try this one:

Open the file in Notepad++;
Copy everything;
Create a new file with the same name;
Paste everything;
Save it.

Now it is gone.
    
    
Answer 8: 

    
    
I tried several of the other answers here with no joy. 

In the end I simply deleted the offending line and rewrote it directly into Android Studio. The error disappeared.

Was this caused by me copying and pasting the line of code from youtube (or whatever random blog I was looking at at the time)?
    
    
Answer 9: 

    
    
You can try to this method:


  
  Rename the class like class1.java
  Create a new class some renamed class like class.java
  Select all contain renamed file and copy into the new class.
  


This method work for me.
    
    
Answer 10: 

    
    
Close android studio and reopen it. It works for me. Furthermore this could happen if you are copying a comment from youtube for example and pasting it into your project
    
    
Answer 11: 

    
    
I try using sublime, open the file then "Save with Encoding" there choose UTF-8 (without BOM), and it works :)
    
    
Answer 12: 

    
    
Simply go in notepad plus plus and open your file and in encoding option at the top bar just select utf8
    
    
Answer 13: 

    
    
OPEN LOOPView.java File First

Convert Your UTF8 To  ISO 8859-1  TO Solve your problem In andorid Studio 

If UTf-8 not show in android studio bottom bar then ctl+shift+n open LoopView Class then so Bottom Bar 





Note ISO-8859-1 Use this

If your error not resolved then Invalidate cache and Restart again and 

gradlew clean
npm start -- --reset-cache
react-native run-android
react-native run-ios

Solve Your issue permenantly

One Other Thing if issue still persist then com.wheel file copy into notepad++ and again copy and paste in your project

 android {  
   compileOptions.encoding = 'ISO-8859-1'
 }


In React-native change in index.js / android/index.js 

import PropTypes from 'prop-types';
    
    
Answer 14: 

    
    
Just delete the first line of the xml-file and retype it by hand (copy paste would reinsert the hidden BOM). 
    
    
Answer 15: 

    
    
The ideas in here certainly helped me but the outcome was a little different.

I did convert my file encoding from UTF-8 to UTF-16. I was then presented with a different error. When i converted it back to UTF-8, I noted that there was a string of unrecognizable characters before my code line. I removed them and recompiled and it worked well.

My conclusion is somehow an unrecognizable character snuck into my code. Could be programmer error, or a blind copy/paste from the web that placed a nasty hidden character. Carrying the process above as outlined by our peers here somehow allowed me to see it.

If you'll follow this idea above, please make sure to clean/rebuild between each conversion.
    
    
Title: How can I make mousewheel work in VB6 IDE?
Description: 
    
    
                    
One annoying behavior of the VB6 IDE editor, especially when switching back to it from more recent tools like VS.NET, is that it doesn't recognize the mousewheel!  Maybe VB6 was brought out when most mice didn't have one, but is there a way to fix it so it does recognize the mousewheel?
    

        
Answer 1: 

    
    
Microsoft has an extension that can provide the behavior requested. You have to download it from the link below and register it with the steps provided, such as using regsvr32
http://support.microsoft.com/kb/837910
Update: Here are the steps

Download the VB6 Mouse Wheel.exe file that includes the add-in DLL
and the code that is used to create the add-in DLL.

Extract the files to a location you have access to.

Open a command prompt, run as administrator.

Go to the folder you
extracted the files to.

type regsvr32 VB6IDEMouseWheelAddin.dll, and then click OK

Start Visual Basic 6.0. Click Add-Ins, and then click Add-in Manager.

In the Add-in Manager list, click MouseWheel Fix.

Click to select the Loaded/Unloaded check box, and then click to select the Load on Startup check box.

Click OK.


    
    
Answer 2: 

    
    
The easiest method that worked for me was just downloading and running the binary from http://www.joebott.com/vb6scrollwheel.htm

Usage:

Just run the exe and your VB editors have the scroll.

Info from the Author:


  This is a small program that will make your mouse's scroll wheel work
  in various older programs - mainly Visual Basic 6's code window. I
  noticed a lot of people coming to this site from Google looking for
  help with their mouse wheel. So, I decided to fix it.
  
  It is possible to support many programs by adjusting its INI file. The
  included INI file includes support for:
  
  
  VB6 Code Window
  VB6 Resource Design Window
  SourceSafe 6 Diff Viewer
  Windiff VBA Editor
  

    
    
Answer 3: 

    
    
****Easy way for beginer:****


Download Download the VB6 Mouse Wheel.exe file as link: http://download.microsoft.com/download/e/f/b/efb39198-7c59-4ace-a5c4-8f0f88e00d34/vb6mousewheel.exe
Run .exe, click unzip (we have VB6IDEMouseWheelAddin.dll)
Coppy VB6IDEMouseWheelAddin.dll to System32 (x32bit) or SysWOW64 (x64bit)
Run Cmd as Administrator
5.1 With x32bit: 

C:\WINDOWS\system32/p/li/olp/pprecode/code/preol start="6"li/lili/lili/lili/lili/li/ol/div
Answer 4: 

    
    
Steps from https://support.microsoft.com/en-us/kb/837910

To install the VB6 IDE Mousewheel Addin:


Copy VB6IDEMouseWheelAddin.dll to your local System32 directory and register.
Open the VB IDE.
Go to the 'Add-Ins Manager'.
Select 'MouseWheel Fix' in the Available Add-Ins.
Check 'Loaded/Unloaded' and 'Load on Startup'.
Click 'OK' button.


You should now be able to use the mousewheel in the code window.
    
    
Answer 5: 

    
    
I came across another method (which was discussed on VBForums, advocated by Dilletante and Elroy).


  ...use the X-Mouse utility to fix the scroll-wheel. ... it's the only
  one I've ever found that correctly scrolls when you have your code
  displayed as a split-window.


Download website.



Since I was having trouble with the Microsoft add-in noted in some other answers I tried this and it does work well. Conveniently it also lets you set some options to tune the scrolling behavior and speed.
    
    
Answer 6: 

    
    
Here's another external program, as mentioned in another question.

Download link: Wheeler


  Wheeler is a free program that enhances the behavior of your mouse
  wheel...
  
  Wheeler is a highly configurable program. Here are some highlights:
  
  In addition to scrolling the window under the cursor when you roll the
  mouse wheel, it's possible to move the keyboard focus to that window...
  Through the concept of wheelability, you
  can control how wheel messages are processed on a per window class
  basis. Scoped window classes allow you to associate window class names
  with the specific programs that define them, so you don't have to
  worry about affecting other programs that may unwittingly use the same
  window class names. ... You can exclude entire programs
  from the Wheeler treatment.

    
    
Title: Can I make IntelliJ IDEA look more like Eclipse?
Description: 
    
    
                    
I've been developing in Eclipse for a long while, but am taking a hard look at IntelliJ IDEA 9.0.3 because of its good Flex development tools and Maven flexmojos integration.

But I just CAN'T STAND the look of the thing on Ubuntu 10.04.  Coming from Eclipse, the fonts and colors make everything very hard to read....very straining on the eyes.  I've played around with fonts and colors and now its a little bit better.

But has some kind soul already created some sort of profile I can load into IDEA and poof -- make it visually look more like Eclipse?
    

        
Answer 1: 

    
    
Eclipse and IDEA are using different UI toolkits (SWT vs SWING), so it would be hard to make it look the same.

As @Shakedown said, changing Look&amp;Feel in Settings | Appearance is one of the options. Note that Java allows to install additional third-party Look&amp;Feels.

Editor font is configured in Settings | Editor | Colors &amp; Fonts. Fonts are rendered by the JVM, so it shows any TTF fonts that it can find. If for some reason not all your system TTF fonts are visible, you need to copy *.ttf files into JDK_HOME/jre/lib/fonts. After restarting IDEA you'll be able to choose new fonts. Fonts missing some Unicode characters required for proper code display will not be listed.

Check out the list of most popular programming fonts. However, Java can render TTF fonts only and it may be hard to find TrueType versions of some fonts. My favorite font is Consolas (provided with Windows).

As for the color schemes, you can Google several contributed presets in the XML format, like this one. Download the linked XML, rename it to Cobalt.xml, place the file in ~/.IntelliJIdea90/config/colors directory. Restart IDEA, select Cobalt scheme in Settings | Editor | Colors &amp; Fonts.

Another nice color scheme is VibrantInk.

It's also possible to disable side tool window bars, menu bar, etc to make IDEA look like simple editor if you'd like so, even editor tabs can be completely hidden.
    
    
Answer 2: 

    
    
Installation Eclipse color scheme:

Copy eclipse.xml to your IntelliJ IDEA preferences
color directory. The directory varies, depending on which JetBrains IDE you are using. It
is typically in:
Mac OS X

~/Library/Preferences/IntelliJIdea13/colors (IntelliJ IDEA 13 Ultimate Edition)
~/Library/Preferences/IdeaIC13/colors (IntelliJ IDEA 13 Community Edition),
~/Library/Preferences/WebIDE70/colors (PHPStorm 7.0).

Windows

%USERPROFILE%/.IdeaIC13/config/colors (IntelliJ IDEA 13 Community Edition)


Restart IntelliJ IDEA

Go to Preferences | Editor | Colors &amp; Fonts and select one of the new
color themes.


    
    
Answer 3: 

    
    
download a color scheme for IntelliJ such as "Classic Eclipse" from http://www.ideacolorthemes.org/home/

It a jar file then you do File &gt; Import Settings... and open the jar file and restart. 

You should also go into Preferences &gt; Keymap and change to the dropdown to be eclipse sortcuts so that you can get about easier. 
    
    
Answer 4: 

    
    
I agree, I can't stand nearly all of the Look and Feels, but I really like Nimbus; File -&gt; Settings -&gt; Appearance -&gt; Look and Feel = Nimbus. Give that a go and see if it helps.
    
    
Answer 5: 

    
    
Try adding

-Dawt.useSystemAAFontSettings=gasp
-Dswing.aatext=true
-Dsun.java2d.xrender=true


to your idea64.vmoptions

It improves antialiasing on my Ubuntu 14.04, Gnome Shell, Oracle JDK 7 slightly. It's not a big difference, still quite far from Eclipse, but it makes it better.

You can also try on, and lcd options instead of gasp. Some users report it makes a difference (for me, on and gasp seem to work the same, and lcd doesn't change anything).

I don't see any difference with Oracle JDK 8.

If you're using OpenJDK, you might need to patch it.

See http://youtrack.jetbrains.com/issue/IDEA-57233#

Update: 

For Oracle JDK 8, removing -Dawt.useSystemAAFontSettings=gasp improves the rendering a bit for me on Ubuntu 14.10
    
    
Answer 6: 

    
    
If you are talking about the dark side of eclipse, you may like my Eclipse Dark Color Scheme: 
https://plugins.jetbrains.com/plugin/11055-eclipse-dark-theme-color-scheme

Example:


    
    
Answer 7: 

    
    
A little late to the party. Here is something I found and worked for me. Basically it creates eclipse like syntax highlighting on intelliJ. Works for Java code and XML which is what I was looking for. 

https://github.com/shalabh-jaiswal/eclipse-syntax-colors-for-intellij-idea
    
    
Answer 8: 

    
    

Install Eclipse Color Theme Plugin: https://marketplace.eclipse.org/content/eclipse-color-theme
Download "IntelliJ Dracula" theme: http://www.eclipsecolorthemes.org/?view=theme&amp;id=14105 (select the Eclipse Color Theme (XML) file download).
In Eclipse, go to Windows 
Title: clang-based cross-platform C++ IDE?
Description: 
    
    
                    
The clang C++ compiler claims to be built for, among other things, better IDE integration by providing an API for the IDE to use for tasks such as parsing the code.

So, are there are any good C++ IDE's that use clang to provide features such as semantic highlighting, refactoring, and finding and showing semantic errors in real-time?

I've been using Eclipse CDT, but its C++ parser is full of imperfections that cause the IDE to report a lot of annoying false positive errors in the code. I would like to have an IDE that reports an error if and only if the compiler would report the same error, hence my interest in an IDE that's built on a compiler's internals.

I'm primarily interested in cross-platform IDE's, although I wouldn't mind knowing about single-platform ones for Windows or Linux (so not Xcode), as long as they are FOSS (another reason why not Xcode).
    

        
Answer 1: 

    
    
Qt Creator is basing their next-gen code parsing and associated functionality on Clang:

http://blog.qt.digia.com/blog/2011/10/19/qt-creator-and-clang/

Looks very, very promising!
    
    
Answer 2: 

    
    
have you tried clang complete?

if you're punk rock, then vim is enough ide ;) 

i often work with xcode so... can't really share firsthand experience, but i knew of its existence.
    
    
Answer 3: 

    
    
gedit isn't really an IDE, but there is a plugin for it that provides code assistance using clang
    
    
Answer 4: 

    
    
It seems that CodeLite v3.5 starts supports Clang natively. However I haven't found is it possible to setup LLVM as backend.
    
    
Answer 5: 

    
    
A relevant new development in this area in the Language Server Protocol (LSP) project, which aims to be a language-agnostic API that allows editors / IDEs to be decoupled from backends that provide code intelligence / analysis.

There is ongoing work to create a clang-based C++ backend called Clangd.

There is also ongoing work on several editors / IDEs to support the LSP as a client.

Once the backend implementation matures, all editors supporting the LSP will, in principle, be able to leverage clang's capabilities as exposed through Clangd.
    
    
Answer 6: 

    
    
KDevelop now has clang based c and c++ support, including semantic analysis and autocomplete.  It is primarily for linux but (as of October 2016) has a beta release out for windows and mac as well.

For emacs there are irony-mode and rtags that provide features such as auto-complete, on fly error checking and jump to symbol.  When combined with cmake-ide they are very powerful tools and one well versed in emacs can be highly productive in this environment.
    
    
Answer 7: 

    
    
Not FOSS, but JetBrains (of IDEA and ReSharper fame) are building out their AppCode product into a full C++ IDE supporting Win/Linux/Mac and using clang. 

Yes, really.
    
    
Answer 8: 

    
    
jucipp

~900 stars on GitHub in 2019Q2: https://github.com/cppit/jucipp

Now moved to GitLab: https://gitlab.com/cppit/jucipp

Clearly advertises libclang backend as a main feature.
    
    
Title: Eclipse Auto Save before build?
Description: 
    
    
                    
Coming from a Visual Studio background...

How do I tell Eclipse that it should auto save when ever I build rather than ask each time.

VS.NET has it under "Options", but I can't find it in Eclipse.

I use a Mac.
    

        
Answer 1: 

    
    
Go to 


  Window -
Answer 2: 

    
    
First, try 


  Window -
Answer 3: 

    
    
Save automatically before build
Window &gt; Preferences &gt; General &gt; Workspace &gt; check &quot;Save automatically before build&quot; &gt; OK


Save dirty editors before launching
Window &gt; Preferences &gt; Run/Debug &gt; Launching &gt; check &quot;Always&quot; for &quot;Save required dirty editors before launching&quot;

Save resources before launching
This is actually an alternative to &quot;Save required dirty editors before launching&quot;
Change something in the current file &gt; Run &gt; check &quot;Always save resources before launching&quot; &gt; OK
 

Details:

IDE: Eclipse Kepler
O.S.: Windows

    
    
Answer 4: 

    
    
Preferences -
Answer 5: 

    
    
This has changed in Eclipse Luna (or maybe it's just because I'm on a mac and the answerers are on a PC).  

You find it under this menu:

Eclipse -
Answer 6: 

    
    
(Just for completeness)

After
Window -
Title: PyCharm change file type association
Description: 
    
    
                    
I have a file in PyCharm and its used to be just a .txt file.
Now I wanted to use .rst (reStructuredText).

I know that when I open a file without an ending for the first time PyCharm asks me what kind of file it is and how the syntax should therefore be interpreted.

Can i open up that dialog again somehow, or can I change the association in some other way?
    

        
Answer 1: 

    
    
Actually, @CrazyCoder is right:
If you accidentally mis-labeled the file, PyCharm remembers it and sets a "pattern" for the new file based on the name.

So go to Settings | Editor | File Types, find the type you accidentally mislabeled and remove it from the "Registered Patterns" list.

For example, I mislabed "osm.py" as text file, so under "Text files" I have:

*.bat
*.cgi
.
.
.
osm.py


Remove it and you get your py file colors back! You can also register a file association where there is no extension. By default this is associated as "Text file".

More on File Types.
    
    
Answer 2: 

    
    
See Settings| Editor | File Types.
    
    
Answer 3: 

    
    
I was having the same problem and noticed that if I 'Invalidate Caches' under the File menu I was able to trigger a re-asking of the file type.

Definitely not ideal.
    
    
Answer 4: 

    
    
In case someone still cannot find it: under Settings | Editor | File Types menu, look for: Files Opened In Associated Applications - see if you can spot there the full name of the problematic file and remove it.
    
    
Answer 5: 

    
    
PyCharm &gt; Preferences &gt; Editor &gt; File Type &gt; Recognised file types &gt; Select one (e.g., Javascript) &gt; Registered Patterns (+ add wildcard * &gt; apply &gt; - remove wildcard).
This worked for me to get my files associated with the right type.
    
    
Title: Is there any way to view whitespace in the query editor for SQL Server Management Studio Express 2005?
Description: 
    
    
                    
I have it enabled in Visual Studio 2008, but I'd really like to enable this feature in SQL Server Management Studio 2005 Express. Does anyone know if its possible? Maybe in a later version?

EDIT: Sorry, I meant specifically in the text/query editor.
    

        
Answer 1: 

    
    
In case you still need to know how to do this.

Edit the Registry Key in HKEY_CURRENT_USER:

Software\Microsoft\Microsoft SQL Server\xx\Tools\Shell\Text Editor\Visible Whitespace


Where xx is the version you have (90 is 2005, 100 is 2008)

And set it to 1 to show. Or for SQL Server 2012 and up client tools it is also in HKCU:

Software\Microsoft\Microsoft\SQL Server Management Studio\v\Text Editor\Visible Whitespace


where v in SQL Server 2012 is 11.0 and in SQL Server 2014 is 12.0.
    
    
Answer 2: 

    
    
Try doing Ctrl R, Ctrl W.

This is Edit.ViewWhiteSpace command (you can see this in Tools
Answer 3: 

    
    
Starting in SSMS 2012 this is available in  Edit em/em
Answer 4: 

    
    
SSMS (2005, I don't know about 2008) does not provide this functionality.

However, you could use a font that uses visible glyphs for spaces and tabs, like this: http://imgur.com/944LZ

I used a free font editor called Type Light to make a copy of an existing font, with a visible space glyph.

I know it's a hack, but where there's a will there's usually a way...
    
    
Title: Visual Studio - Automatically refresh class view when changing class
Description: 
    
    
                    
I come from a Java background and have spent many years using Eclipse. One feature that I miss when using Visual Studio (2008) is that the class view does not automatically refresh when I change class. In Eclipse it has a (class) 'Outline' window which represents the current class and shows methods/properties etc, this always updates to the class one is using.

The equivalent 'Class View' in VS does not automatically refresh according to the current class I am visiting. I wondered if anyone knew a way to make this happen?

Ideally I'd like the VS view to be as similar to Eclipse as I could get it, but this one feature would be great. 

Thanks in advance,
Will
    

        
Answer 1: 

    
    
After reading kingmaxxx's reply, I went to Tools-
Answer 2: 

    
    
For Visual Studio 2005

I found a solution that does not update the view automatically, but at least you get a context entry that helps:

http://blogs.msdn.com/ansonh/archive/2005/12/09/502020.aspx

You can also define a shortcut key:

Tools-
Answer 3: 

    
    
The best way is to create a context menu when you right-click on a type in code editor.
Tools-&gt;Customize
Click on 'Commands' tab. Select Context Menu radio button, and select &quot;Editor Context Menus | Code Window&quot;.
Then &quot;Add Command&quot; and select View-&gt;Synchronize Class View.
Now whenever you right-click on a type, you can select &quot;Synchronize Class View&quot;. It's the very top context-menu item.
Looks like this:

    
    
Answer 4: 

    
    
I can't help you with the class view, but maybe you want to give the solution explorer a try? You can synchronize this one via:

tools -&gt; options -&gt; projects and solutions -&gt; general
enable "track active item in solution explorer"

    
    
Answer 5: 

    
    
The problem with View.SynchronizeClassView is that is doesn't work when a class is being viewed from a virtual folder. 
    
    
Answer 6: 

    
    
based on kingmaxxx's response I found that you can add a button to your toolbar to do the same:

Tools|Customize -
Answer 7: 

    
    
I haven't had time to get this to work yet, but there is code for a VS2003/2005 add-in to auto-sync here (see the post marked "answer").

Incidentally, this question seems to be a duplicate of this one.
    
    
Answer 8: 

    
    
For Visual Studio 2017, CodeMaid Spade comes to the rescue quite perfectly.
Codemaid VS Extension
At first, I couldn't find the equivalent to 'Class View'.  It's called Spade.
It auto-syncs to the currently open class.
    
    
Answer 9: 

    
    
I don't know of any ways to do this but I agree that it would be a nice feature.  

You can track items in Solution Explorer though (Options-
Answer 10: 

    
    
Also coming from java (Eclipse), I missed the outline (Class viewer). I have tried many solutions and the best I found is to use the CODEMAID extension.

It also provides a lot of other tool but you are free not to use it!
    
    
Answer 11: 

    
    
Coming from Eclipse you will miss a lot of such features. What I miss most for navigation is an easy go to type, go to inheritor and so forth.  Other features, such as nUnit support are not part of the vanilla Visual Studio, too. Here is a list of Add-Ins that bridge the gap:


CodeRush
Resharper
TestDriven.net, just nUnit integration


But here comes the drawback: They all charge you money (TestDriven.net only for commercial use). However, they all offer free trials.
    
    
Answer 12: 

    
    
Tools Menu -/pp/p/div
Answer 13: 

    
    
With Resharper, ALT+SHIFT+L goes to the current file in Solution Explorer.
    
    
Title: Does IntelliJ IDEA work on a 64-bit Windows system?
Description: 
    
    
                    
I have downloaded and installed IDEA 13.1. However, even having a 64-bit system, Windows has automatically installed the program in the folder Program Files (x86), which is dedicated for 32-bit programs. 

Is there another download for the 64-bit version or maybe a special setting to make it suitable for a 64-bit system?
    

        
Answer 1: 

    
    
In C:\Program Files (x86)\JetBrains\${Intellij Idea version}\bin, there is an executable called idea64.exe. This is for 64-bit systems. You can simply change your IntelliJ shortcut path to it.

You also need to add a new environment variable IDEA_JDK_64 pointing to your 64-bit JDK so IntelliJ can use a 64-bit JDK.

idea64.exe uses this JDK search sequence:


IDEA_JDK_64 environment variable
..\jre64 directory
system Registry
JDK_HOME environment variable
JAVA_HOME environment variable


More can be found in a related IntelliJ support article.
    
    
Answer 2: 

    
    
If installing latest version as of today 2016.3.2, while installing the installation wizard prompts to either choose 32-bit or 64-bit.
    
    
Answer 3: 

    
    
You need to install the Java SDK 64bit so it shows the options to install IntelliJ 64bit.
    
    
Title: Selecting which project under a solution to debug or run in Visual Studio 2010
Description: 
    
    
                    
This one should be easy. I just can't figure out what to search for...

For this one solution I created a unit test project, and I've been adding unit tests frantically. When I went back to try to run the original project after making all the unit tests pass I realized that I couldn't figure out how to debug the original project.

In other words, every time I try to "debug" (e.g., by pressing F5), Visual Studio will run the unit tests. So the question is how do I run various projects in a single solution? How do I select which one will run when I want it to?
    

        
Answer 1: 

    
    
You can right click on the project and choose to set as startup project
    
    
Answer 2: 

    
    
You can right-click a project and set it as the Startup Project.  It then is debugged when you press F5, or run when you press Ctrl-F5.

You can right-click a project and select Debug / Start new instance to debug a project that is not the startup project.

On a side note, you can run / debug the unit tests without setting the unit test project as the startup one.  There are icons (and keyboard shortcuts) in the toolbar to run or debug unit tests at various scopes (if not visible right-click your toolbar and select Test Tools).
    
    
Answer 3: 

    
    
1) In the Solution-Explorer, right-click on the project that is the project for the executable assembly, and select "Set as Startup Project". This will make the project show in bold, and will be run automatically when you press F5.

2) Alternatively, in the Solution-Explorer, right-click on the project that is the project for the executable assembly, and select "Debug -/p/div
Answer 4: 

    
    
This was my quickly Startup Project change way for me: 


Tools strong/strong
Answer 5: 

    
    
I wanted to debug a single console app project, and it is as simple as that:


Select the project in the Visual Studio run menu:

You can even add debug parameters in the project properties:



That's it. You can right-click the project and press "Start new instance", 

or press F5, or click the "play" button visible in the first image.
    
    
Title: Toggle &ldquo;Break when an exception is thrown.&rdquo; using macro or keyboard shortcut
Description: 
    
    
                    

  Edit: Visual Studio 2015's new exception window is so much faster than
  the old dialog that I no longer care as much about using a keyboard
  shortcut for it.


Is there a macro or keyboard shortcut that will toggle "break when an exception is thrown" without using the GUI?

Opening the dialog with ctrl+alt+e and checking the "Common Language Runtime Exceptions" "Thrown" box then clicking OK is simple enough, but this is something I do a lot. I would rather have a keyboard shortcut for this.

This question is a duplicate of
Any have a Visual Studio shortcut/macro for toggling break on handled/unhandled exceptions?

However, the poster accepted an answer that doesn't really work, and I would really like an answer that does work.

The answer in the duplicate question is not acceptable because it toggles only one specific exception, not the entire CLR group.

"Well write a loop then." you say. But not so fast! Someone tried that already and it was uselessly slow. (Yes I've verified that its slow on my system as well.)

So the challenge is to use a macro to toggle the entire CLR Exceptions category in less than 1 or 2 seconds.
This question is a duplicate of
Any have a Visual Studio shortcut/macro for toggling break on handled/unhandled exceptions?
    

        
Answer 1: 

    
    
I have created a free Visual Studio extension that can do that reliably: Exception Breaker.
It uses undocumented IDebugSession2.SetException call that is very fast: all exceptions are set/unset in 20 to 60 milliseconds.
    
    
Answer 2: 

    
    
Very similar to the other answer, but there is a special ExceptionSetting for the group.

Dim dbg As EnvDTE90.Debugger3 = DTE.Debugger
Dim exSettings As EnvDTE90.ExceptionSettings = dbg.ExceptionGroups.Item("Common Language Runtime Exceptions")
Dim exSetting As EnvDTE90.ExceptionSetting
Try
    exSetting = exSettings.Item("Common Language Runtime Exceptions")
Catch ex As COMException
    If ex.ErrorCode = -2147352565 Then
        exSetting = exSettings.NewException("Common Language Runtime Exceptions", 0)
    End If
End Try

If exSetting.BreakWhenThrown Then
    exSettings.SetBreakWhenThrown(False, exSetting)
Else
    exSettings.SetBreakWhenThrown(True, exSetting)
End If

    
    
Answer 3: 

    
    
Here's Bryce Kahle's very useful macro blindly updated to run in VS2010:

Sub ToggleExceptions()
    Dim dbg As EnvDTE100.Debugger5 = DTE.Debugger
    Dim exSettings As ExceptionSettings = dbg.ExceptionGroups.Item("Common Language Runtime Exceptions")
    Dim exSetting As ExceptionSetting
    Try
        exSetting = exSettings.Item("Common Language Runtime Exceptions")
    Catch ex As COMException
        If ex.ErrorCode = -2147352565 Then
            exSetting = exSettings.NewException("Common Language Runtime Exceptions", 0)
        End If
    End Try

    If exSetting.BreakWhenThrown Then
        exSettings.SetBreakWhenThrown(False, exSetting)
    Else
        exSettings.SetBreakWhenThrown(True, exSetting)
    End If

End Sub

    
    
Answer 4: 

    
    
First i initalized a timer an then i call the command Exception.Debug.
The timer hit, when the modal dialog is openend.
If you use Win 7 with deactivated UAC SendKeys with ALT-Key will fail...i don't know why.

i played a little bit...try this (VS2010 EN):

Imports System
Imports EnvDTE
Imports EnvDTE80
Imports EnvDTE90
Imports EnvDTE90a
Imports EnvDTE100
Imports System.Diagnostics
Imports System.Runtime.InteropServices

'...

Private WithEvents t As Timers.Timer
Private Sub t_Elapsed(ByVal ee As Object, ByVal dd As Timers.ElapsedEventArgs) Handles t.Elapsed
    t.Stop()
    ' Tastatureingaben simulieren
    System.Windows.Forms.SendKeys.SendWait("{DOWN}")
    System.Threading.Thread.Sleep(1500) ' Pause wichtig zum Laden des Exceptionbaums
    System.Windows.Forms.SendKeys.SendWait("%t")
    System.Windows.Forms.SendKeys.SendWait("{ENTER}")
End Sub
Public Sub toggleCLRExceptions()
    If DTE.Solution.Count &lt;= 0 Then
        MsgBox("Nicht ohne geöffnete Solution!")
        Exit Sub
    End If
    ' Timer wird benötigt, da der Dialog Modal ist
    ' und weitere Befehle im Macro werden erst nach beenden des Dialogs ausgeführt
    t = New Timers.Timer()
    t.Interval = 0.5
    t.Start()
    DTE.ExecuteCommand("Debug.Exceptions")
    'System.Windows.Forms.SendKeys.SendWait("^%e") ' alternativ: STRG+ALT+e
    System.Threading.Thread.Sleep(200)
    If isCLRExceptionsActive() Then
        MsgBox("BREAK @CLR-Exception", MsgBoxStyle.Information, "Info")
    Else
        MsgBox("NO BREAK @CLR-Exception", MsgBoxStyle.Information, "Info")
    End If
End Sub

Function isCLRExceptionsActive() As Boolean
    ' prüft, ob Setting Debug CLR-Exceptions aktiviert/deaktivert ist
    Dim dbg As EnvDTE100.Debugger5 = DTE.Debugger
    Dim exSettings As ExceptionSettings = dbg.ExceptionGroups.Item("Common Language Runtime Exceptions")
    Dim exSetting As ExceptionSetting
    Try
        exSetting = exSettings.Item("Common Language Runtime Exceptions")
    Catch ex As COMException
        If ex.ErrorCode = -2147352565 Then
            exSetting = exSettings.NewException("Common Language Runtime Exceptions", 0)
        End If
    End Try
    Return exSetting.BreakWhenThrown
End Function

'...

    
    
Answer 5: 

    
    
Well, I wrote a VS2008 C# based plug-in that toggles the 386 exceptions, and it takes about 1 second per state toggle. I'm assuming that's due to COM inter-op.

This was based on the VB/macro code in the one of your links. I could not find an easier C++ method (but not ruling it out). 

The next level would be to make a plug-in that has a keyboard binding, that then opens the Exceptions UI and then "clicks" the correct tick box for you.

Good luck. 
    
    
Answer 6: 

    
    
You could use a tool like AutoHotKey to create a recorded script (mouse clicks or key presses) and then assign it a hotkey that will play it back when pressed...
    
    
Answer 7: 

    
    
Just offering some info I found on this (here) as I was scouring the net in my futile attempt to help...

Someone else posed this same question and it was responded to by Gary Chang from MS Support, here's the quoted response:


  I am afraid the Macro code cannot
  manipulate the operations on the
  Exceptions dialog box...


It's important to note that this posting is from December of 2005 so this response may no longer be accurate; either way, thought I'd throw it out there.
    
    
Answer 8: 

    
    
The suggestion of setting the special ExceptionSetting for the group does indeed toggle the state of the top-level checkbox.  However, it doesn't seem to toggle the individual Exceptions below it in the tree, and moreover, my process does not stop when such exceptions are thrown as it does if I manually check the top-level checkbox.  Do you see different behavior?
    
    
Answer 9: 

    
    
My macro to ignore current CLR exception in runtime. It works like a button 'disable catching this exception type' when an exception pops at debug-time.

Imports System
Imports EnvDTE
Imports EnvDTE80
Imports EnvDTE90
Imports EnvDTE90a
Imports EnvDTE100
Imports System.Diagnostics
Imports Microsoft.VisualBasic
Imports Microsoft.VisualBasic.ControlChars

' execute Macros.MyMacros.VSDebuggerExceptions.IgnoreCurrentExceptionWhenThrown from VS Command Window

Public Module VSDebuggerExceptions

    Sub BreakWhenThrown(Optional ByVal strException As String = "")
        Dim dbg As Debugger3 = DTE.Debugger
        Dim eg As ExceptionSettings = _
            dbg.ExceptionGroups.Item("Common Language Runtime Exceptions")
        eg.SetBreakWhenThrown(True, eg.Item(strException))
    End Sub

    ' copied from Utilities module (samples)
    Function GetOutputWindowPane(ByVal Name As String, Optional ByVal show As Boolean = True) As OutputWindowPane
        Dim window As Window
        Dim outputWindow As OutputWindow
        Dim outputWindowPane As OutputWindowPane

        window = DTE.Windows.Item(EnvDTE.Constants.vsWindowKindOutput)
        If show Then window.Visible = True
        outputWindow = window.Object
        Try
            outputWindowPane = outputWindow.OutputWindowPanes.Item(Name)
        Catch e As System.Exception
            outputWindowPane = outputWindow.OutputWindowPanes.Add(Name)
        End Try
        outputWindowPane.Activate()
        Return outputWindowPane
    End Function

    Private WithEvents t As Timers.Timer

    ' Adds the current exception to ignore list
    Sub IgnoreCurrentExceptionWhenThrown()
        Dim commandWin As EnvDTE.CommandWindow
        commandWin = DTE.Windows.Item(EnvDTE.Constants.vsWindowKindCommandWindow).Object

        Select Case DTE.Debugger.CurrentMode
            Case dbgDebugMode.dbgDesignMode
                commandWin.OutputString("This macro is not enabled in Design Mode. Run it in Break Mode." + vbCrLf)
                Return

            Case dbgDebugMode.dbgRunMode
                commandWin.OutputString("This macro is not enabled in Run Mode. Run it in Break Mode." + vbCrLf)
                Return
        End Select

        commandWin.OutputString(Environment.NewLine)
        commandWin.OutputString("Trying to get the information about current exception.." + Environment.NewLine)

        Dim dbg As Debugger3 = DTE.Debugger
        Dim currentExpression As Expression = dbg.GetExpression("$exception", False)
        Try    
            Dim currentExceptionTypeString As String = currentExpression.DataMembers.Item(1).Type
            commandWin.OutputString("Detected current exception type is : " + currentExceptionTypeString + Environment.NewLine)

            Dim flag As Boolean = True
            Dim eg As ExceptionSettings = dbg.ExceptionGroups.Item("Common Language Runtime Exceptions")
            Try
                eg.SetBreakWhenThrown(False, eg.Item(currentExceptionTypeString))
            Catch exc As Exception
                commandWin.OutputString("Cannot find this exception, trying to create.." + currentExceptionTypeString + Environment.NewLine)
                '
                eg.NewException(currentExceptionTypeString, New Random().Next)
                eg.SetBreakWhenThrown(False, eg.Item(currentExceptionTypeString))
                eg.SetBreakWhenUserUnhandled(True, eg.Item(currentExceptionTypeString))
                flag = False
            End Try

            commandWin.OutputString(Environment.NewLine)
            commandWin.OutputString("Exception '" + currentExceptionTypeString + "' added to ignore list.")
            commandWin.OutputString(Environment.NewLine)

            t = New Timers.Timer()
            ' small interval to send keys after DTE will start to exec command
            t.Interval = 0.1
            t.Start()
            DTE.ExecuteCommand("Debug.Exceptions")

        Catch exc As Exception
            commandWin.OutputString("Error occured")
        End Try
    End Sub

    Private Sub t_Elapsed(ByVal ee As Object, ByVal dd As Timers.ElapsedEventArgs) Handles t.Elapsed
        t.Stop()
        ' only press Ok to apply changed exceptions settings to debugger
        System.Windows.Forms.SendKeys.SendWait("%t")
        System.Windows.Forms.SendKeys.SendWait("{ENTER}")
    End Sub

End Module

    
    
Answer 10: 

    
    
CTRL + ALT + E
ALT + T
Enter 

works for me
    
    
Title: Which is the best IDE for Python For Windows [duplicate]
Description: 
    
    
                        
            
        
            
                
                    
                        This question already has an answer here:
                        
                    
                
            
                    
                        What IDE to use for Python? [closed]
                            
                                (1 answer)
                            
                    
                Closed 9 months ago.
        


    

I am new to python and I am using simple gedit application on linux machine to write python code, however its very difficult to manage the indentations of my code. I am looking for any Python IDEs that provides some functionality and should not slow down my P4 machine.
    

        
Answer 1: 

    
    
I recommend you take a look at the list of editors on Python's wiki, as well as these related questions:


What IDE to use for Python?
Which editor/IDE should I use for Python?

    
    
Answer 2: 

    
    
U can use eclipse. but u need to download pydev addon for that.
    
    
Answer 3: 

    
    
Python is dynamic language so the IDE can do only so much in terms of code intelligence and syntax checking but I personally recommend Komode IDE, it's pretty slick on OS/X and Windows. I've experienced high cpu use with Linux but not sure if it's caused by my VirtualBox environment.

You can also try Eclipse with PyDev plugin. It's heavier so performance might become a problem though.
    
    
Answer 4: 

    
    
Here's the answer to all your questions: http://wiki.python.org/moin/PythonEditors
    
    
Title: Make Text tab open by default in Android Studio
Description: 
    
    
                    
I use keymaps in Android Studio to save time. 

To open "Recent Files" I happen to use the keymap of CMD+ E, which will open the "Recent Files" pop-up screen.

The problem is that when I then select any of the .xml layout files from this screen, it opens the file by default in "Design" mode, instead of "Text". 

I prefer to code my layouts in "Text" mode. This means I then have to keyboard shortcut CTRL+ SHIFT + -&gt; every time to edit the layout in "Text" mode. How do I open "Text" mode by default. 

Note: I would post images, but that is reputation dependent...
    

        
Answer 1: 

    
    
Open Settings:

File -&gt; Settings -&gt; Editor -&gt; Layout Editor -&gt; check the checkbox "Prefer XML Editor"

    
    
Answer 2: 

    
    
In newer versions of Android Studio you can find the setting mentioned by Andrey under Preferences 
Answer 3: 

    
    
In Android Studio 3.0 for MacOS

Android Studio -
Answer 4: 

    
    
On Mac: Cmn + Shift + A -/ppkbd/kbdkbd/kbdkbd/kbd
Title: Trigger xDebug in PhpStorm when calling using CURL
Description: 
    
    
                    
so I use CURL from the command line to make calls to my PHP website:

curl -s "url"


My question is...is it possible to modify this command so that I can trigger xDebug (combined with an IDE (I use Jetbrains PHPStorm)) when calling the site from CURL 

perhaps manipulate the GET variables?
    

        
Answer 1: 

    
    
The following code works for me

curl -i -X POST -d '{"some":"data"}' http://your-local-domain -b XDEBUG_SESSION=PHPSTORM

    
    
Answer 2: 

    
    
I was still having trouble until I added path=/ to the cookie in addition to wyxa's answer.

curl --cookie "XDEBUG_SESSION=PHPSTORM;path=/;" localhost

    
    
Answer 3: 

    
    

Install an xdebug extension in your browser, for instance, The Easiest Xdebug for Firefox or Xdebug helper for Chrome/Chromium.

Click the button of the extension to enable it, and refresh the page you're loading.

Open your devtools, open the &quot;network&quot; panel, and find the AJAX request or the main request that you're interested in. Right-click on the request, and click &quot;Copy as cURL&quot; in Firefox, or &quot;Copy -&gt; Copy as cURL&quot; in Chrome/Chromium.

Now paste that command into the terminal and run it. You'll notice that the cURL command already has the cookie XDEBUG_SESSION set under the parameter -H Cookie: ....


    
    
Title: What is the difference between Eclipse with Spring IDE plugin and Spring Tool Suite alone?
Description: 
    
    
                    
What's the difference between these


Eclipse with the Spring IDE plugin
Spring Tool Suite (STS) alone


I ask because STS says it's built on top of Eclipse, and I wonder what differences it has over simply using a plugin that adds similar functionality to "vanilla" Eclipse.
    

        
Answer 1: 

    
    
It's true, STS is built on top of Eclipse. The difference is only related to another products support from the STS installation, like Roo, Pivotal tc Server, Cloud Foundry and getting started guides, but you could also include this features in your Eclipse installation. 

So STS gives a complete solution around Spring features and simplifies the developer environment install, that's the key difference.

As Martin Lippert explains in the forums: 


  "So you can end-up having the same features in STS and your existing
  Eclipse installation after installing the STS features into it."


You could find more details on the Spring forums.

Details on features: STS features and Spring IDE plugin features.
    
    
Answer 2: 

    
    
Spring Tool suite has ready to go features specially designed to spring supported projects and cloud environment. And Eclipse is more generic where we've to add the plugins and extensions for our platform setup.
    
    
Answer 3: 

    
    
There is already an article about this in DZone Spring IDE and the Spring Tool Suite - Using Spring in Eclipse.


  While the Spring IDE project provides a set of plugins for the Eclipse
  IDE, the Spring Tool Suite comes as a ready-to-use distribution of the
  latest Eclipse releases with the Spring IDE components pre-installed. 
  This includes the tc Server integration for Eclipse (another IDE
  extension that is provided by Pivotal as an open-source project) and
  various other additions to Eclipse that turn the pure Eclipse IDE into
  a ready-to-use, best-of-breed environment for enterprise Spring
  application development.

    
    
Title: Hints to improve Eclipse performance
Description: 
    
    
                    
Working in Eclipse with big projects can be painful because of IDE works slowly, sometimes stops and doesn't respond. I know it can depends on OS, version of Eclipse etc.

All eclipse developers have tricks which tuning workspace in Eclipse, What should be turn off to improve performance the IDE?

For example: My project has the recommendation to turn off xml validations, don't install m2eclipse. 

Because of eclipse's performance some devs use IntelliJ.

UPDATED:
For these who feel uncomfortable with the eclipse's performance I suggest to try other solutions just to have comparison - I tried and this was the best what I've done in performance subject :)
    

        
Answer 1: 

    
    

Remove unwanted activation of some of the plugins at start-up by going to windows--
Answer 2: 

    
    

Ensure you have enough memory and that Eclipse is actually using it (add -Xms -Xmx arguments at Eclipse start).
Remove all plug-ins, you dont use.
Create separate workspace for projects you change rarely and include them as JARs to your primary project.
Use debug mode only when you are debugging (it is slower and uses more memory).

    
    
Answer 3: 

    
    
I'm an intelliJ user though occasionally peep into eclipse since I like to use it. Couple of things you can try which my work colleague pointed to are


Show the heap status (General -/ppa href="https://i.stack.imgur.com/JZpEO.png" rel="nofollow noreferrer"img src="https://i.stack.imgur.com/JZpEO.png" alt="enter image description here"/a/p/lilip/p/lili/lili/li/ulp/p/div
Answer 4: 

    
    
Put all validators (preferences /pp/pblockquotep/p/blockquote/div
Answer 5: 

    
    
If you have a lot of projects open, it might help to close unused projects. It helps a lot, as Eclipse does not have to provide all the memory model required for content assist.
    
    
Answer 6: 

    
    
Add the source and output directory trees to your Virus Scanner's exclusion list.
    
    
Answer 7: 

    
    
Disable 'Build Automatically' in the Project menu and set up a key binding for Build Project instead, e.g. CTRL + B.  I've tried so many different things to improve Eclipse performance, but this is the only one that really works for me.
    
    
Answer 8: 

    
    
Getting slow performance usually is a problem of one or more badly implemented plugins. Identifying the bad plugin and uninstalling it normally removes the bad performance (of course if you realy NEED the plugin you are out of luck ;) ).
    
    
Answer 9: 

    
    
1.Disable unecessary validations and startup action in eclipse reference.

For validations: on eclipse menu Windows -
Answer 10: 

    
    
I am debugging a large program containing lots of breakpoints. I have heavily increased Eclipse's performance while debugging by disabling the breakpoints at startup, and only enabling them again just before I need them.
    
    
Title: Which IDE for Scala 2.8?
Description: 
    
    
                    
This is the same question for older version of Scala, but they say that Eclipse plugin has been improved vastly. Is it the best IDE now? How do different Scala IDE compare today? 
    

        
Answer 1: 

    
    
I've been pretty successful with IDEA 9. I've briefly tried both Netbeans and Eclipse and wasn't able to get what I wanted. Eclipse's code-complete didn't behave as well as I'd have liked, and I couldn't find a way to make Netbeans handle Scala scripts; It'd just complain that the file wasn't a class.

To be clear, I've been using IDEA for a few years for Java, so keep that in mind:)
    
    
Answer 2: 

    
    
For the moment, Scala Plugin in IntelliJ IDEA is the best. It handles Scala 2.8 well. IntelliJ IDEA Community Edition is now free and open source (and works with Scala), so I can't see any reason for not using it.

The plugin is still somewhat buggy (many "false negatives", i.e. the code without red underscores may not compile successfully; but almost no "false positives"), but perfectly usable. The best thing is that you can use IDEA's excellent debugger with Scala (not without some issues, but it actually works!).

FSC (Fast Scala Compiler) is also supported in latest builds. A huge time-saver.

The plugin development team is quite responsive. Some of the guys work directly in JetBrains and possess intimate knowledge about IDEA platform, so the development progresses fast.
    
    
Answer 3: 

    
    
JetBrains IDEA's Scala plug-in handles 2.7 and 2.8 equally well.

I cannot make any comparisons because I have used only IDEA.
    
    
Answer 4: 

    
    
Using Eclipse Helios with the dev-version of the new Scala(2.8) plugin, as there isn't an official release yet. That is beta, definitively -- but I can't confirm the frequently expressed opinion that this plugin is outright horrible ;-)

I'd say, the experience is already OK-ish, and indeed better than the current state of affairs with the Groovy plugin. OTOH, the experience with plain Java is way more smooth (feels like flying at times), and the current CDT I'd rate somewhat in between.

Incremental compile and error highlighting work quite well for me; tweaking a DSL implementation into form just by continuously rewriting your code until the error markers are gone -- without ever having to test-run your program -- is outright fun and just again shows that FP / static typing rocks!

Problems encountered from time to time:
- implicits and nested types in other compilation units (esp. nested / super packages) aren't picked up at times when there are still other errors around; they will be picked up after an full build
- there seems to be a memory leak in the version I'm using right now (from end august 2010), necessitating to restart the workbench after some hours of work
- beware when you're using AspectJ, to make sure you get a version of the Scala plugin which relies on a JDT weaving bundle version which also works with AJDT

PS: I'm using maven builds in all my projects and generated the eclipse projects with the eclipse-maven-plugin, and then imported them as plain-flat eclipse projects. I can just strongly recommend everyone to keep away from the M2-eclipse plugin (for maven) in its current (2010) state, it makes your workbench painfully slow, is buggy and has lots of almost unpredictable behaviour, because it constantly tries to do magic things behind the scenes (and besides that, the aspectj support is broken since this spring)
    
    
Answer 5: 

    
    
i use both eclipse and IDEA


eclipse supports type detection is
better than IDEA (it is very
neccessery thing if you want program
in functional style that you can be
aware from type of expressions and
variables.)



Edit1: IDEA supports type detection like eclipse but you have
to define a value in your functions
for example: def
testTs[A](a:List[String],b:List[A])
= for{
      ai &lt;- a
      bi &lt;- b
    }  yield (ai,bi)   } should be converted to  def
testTs[A](a:List[String],b:List[A]):List[(String,A)]={
    val result = for{
      ai &lt;- a
      bi &lt;- b
    }  yield (ai,bi)   } also instead of hover your mouse over variables you must press ctrl+q when your mouse is hover on that variable
eclipse have some problems in code
completion (when you use a variable
in next line and you want get a
property of this variable eclipse
show wrong code suggestions)
in IDEA ruining a scala application
is 5 sec slower than eclipse (there is some solution for bust IDEA run time but these have side effect have some problems)
in idea there is a well known problem with double click speed that show itself in many cases like opening a file or selecting an string in source... you can increase double click time out by creating (or editing) /home/.Xresources and add this line: *.multiClickTime: 400


Edit1: in summery i prefer to use IDEA rather than eclipse
    
    
Answer 6: 

    
    
My experiences clearly point to IntelliJ IDEA:

About six months ago, when I started a serious Scala (multi module) project, I had to abandon Eclipse as my favorite Java IDE and switched to IntelliJ (9.0.x). Eclipse Scala IDE was way to buggy and often stopped responding at some point, even for the most simple projects. For CI (Hudson) and command line build, I depend on Maven (with Scala plugin). The Maven dependencies (incl. Scala libs) are picked up nicely by IntelliJ.

A few days back I updated to IDEA X (CE) with the current plugin (nightly build) and work became even smoother. Although fsc still terminates after a while when inactive.

From what I see, I'd like to add, that there seems to be way more activity on the IntelliJ side to respond to bugs and improve the plugin continuously. Correct me when I'm wrong, but Eclipse Scala IDE development seems almost stalled. Still no 'official' Helios release!

NB: Just to provide some context (not bragging, really): The aforementioned project consists of about 25 Scala modules (POMs), 5 Java modules, 325 Scala files with a total of about 360 Scala classes, case classes and traits (/ppa href="http://youtrack.jetbrains.net" rel="nofollow"/a/pp/pp/p/div
Answer 7: 

    
    
A non-answer: None.

Based on what a perceived majority says, IDEA is probably the best Scala IDE today. And it (read: the Scala plugin) sucks. It does not handle fsc well, type inference is a mess, many errors are not shown, a number of non-errors are marked as errors, it is slow (when inspections are turned on), the test runner silently swallows aborting (!= failing) tests, ...

So I switched to a simple text editor with syntax highlighting on one and a maximized shell with SBT (simple build tool) on the other screen. Awesome! SBT is responsive (you can let file changes trigger recompilation of affected code and even reruns of tests), manages dependencies very smoothly and has helpful output (esp for tests; using ScalaTest). SBT increased my productivity compared to IDEA a lot.

You lose code completion, of course, altough geany offers me identified symbols. But as long as IDEs don't get type inference to work properly code completion does not help, anyway.

Some people care a lot about code refactoring. Well, the IDEs apparently don't make a good job there either. Even if they would, I'd rather only open them for this particular task than use them all the time.
    
    
Answer 8: 

    
    
I think that the best option so far is the ScalaIDE for Eclipse. You can go to the ScalaIDE Web Site and look around to see by yourself. 
http://scala-ide.org/

Strong points I see about it are: 


documentation, 
tutorials, 
constant releases, 
support from Typesafe.


Here below a summary of the main features:

Scala IDE provides support for development of Scala applications in the Eclipse platform. Its main target is the support for the Scala language and the integration with the Eclipse Java tools. It provides many of the features Eclipse users have come to expect including:


Support for mixed Scala/Java projects and any combination of Scala/Java project dependencies. Type driven operations are transparent across Scala and Java files and projects, allowing straightforward references from Scala to Java and vice versa.
A Scala editor with syntax highlighting, inferred type, hyperlinking to definitions, code completion, error and warning markers, indentation, brace matching.
Project and source navigation including Scala support in the Package explorer view with embedded outline, outline view, quick outline, open type, open type hierarchy.
Incremental compilation, application launching with integrated debugger, hyperlinking from stack traces to Scala source, interactive console.
Support for Eclipse plug-in and OSGi development including hyperlinking to Scala source from plugin.xml and manifest files.


UPDATE: the features and advantages are mentioned on this answer are for version 2.9 and 2.10 of Scala, because it has been already discontinued. see here:

"The 2.0.1 release is only available for Scala 2.9, if you would like to use the Scala IDE with Scala 2.8, please install the 2.0.0 release (support for Scala 2.8 has been discontinued after the 2.0.0 version)"
    
    
Answer 9: 

    
    
The officially endorsed and supported (by Typesafe) for Scala 2.9 is Eclipse. The current version is far superior to prior versions and includes a context-aware REPL, full-featured debugger, and even the ability to debug REPL statements.  I think this question needs to be updated and the answers revisited.
    
    
Answer 10: 

    
    
I don't recommend the Scala IDE/Eclipse.  It doesn't have a lot of the features that are even available for Eclipse with Java.  And there are bugs.
    
    
Answer 11: 

    
    
I am using the latest NetBeans and haven't tried anything else. I've met at least 2 notable bugs in NetBeans while coding in Scala:

One: NB occasionally come unable to run a program, hanging on classpath scanning.
Solution: Create a new project, copy your code there and go on.
Comment: This bug is more than 10 years old.

Two: Sometimes NB can't see members of particular namespaces or classes and complains when you use them.
Solution: Just ignore and go on - compiler founds no errors and the program works.
    
    
Answer 12: 

    
    
I'd recommend IDEA's plugin for now.

The Scala plugin for NetBeans is quite nice too. It doesn't yet support NetBeans 6.9, the newest release, though, and you still need to download it manually instead of installing it directly from the plugin manager inside NetBeans. 

However, it integrates better with Maven projects than IDEA's plugin does (this is true for NB and IDEA in general, in my opinion).
    
    
Answer 13: 

    
    
It partly depends on your style of working, as all the options have strengths and weaknesses.

If you need refactoring across mixed java/scala projects, then IntelliJ is your only option.

If you want to do any work on the compiler or a compiler plugin, then Eclipse has the advantage of being able to launch a runtime workspace with a custom compiler build, including breakpoints.  It also improved massively for the 2.8 Scala release.

Netbeans is a fine choice to go with if you're already very familiar with that platform, the costs of learning a new environment may well outweigh any benefits, and all three solutions are improving rapidly.
    
    
Answer 14: 

    
    
I haven't tried netbeans scala plugin yet, but I find that Intellij IDEA plugin is at any way much better a scala ide than the Scala eclipse plugin, which is sooooo slow that drives me crazy.
Though swing applications don't work well with my tiling window manager.
    
    
Answer 15: 

    
    
try IDEAX the latest community edition of Intellij IDEA (version 10), it has improved scala plugin which has faster code compilation and exceution in addition to that it has 
Maven3 and SBT support with which we can develop Lift applications.
    
    
Answer 16: 

    
    
IntelliJ IDEA community edition + Scala Plugin + SBT plugin
    
    
Title: Change number of Recent Projects displayed on VS2010 Start Page
Description: 
    
    
                    
Ok, I had VS2010 Start Page set up to display 20+ projects in the Recent Projects section, but while I was messing around with theming and importing/exporting settings I seem to have reset it back to its default of 10, and I can't locate where that setting is.  Does anyone know where the setting for number of recent projects on the start page, not the File menu, is located?  I've changed the values in tools\options, environment to be 24 (the maximum) for both items in the recent files section of that page of settings, but alas this does not affect the start page.

TIA
    

        
Answer 1: 

    
    
The setting you're looking for is in Tools -&gt; Options -&gt; Environment -&gt; General (Items shown in recently used lists).  Note that when you change the setting to a lower number that you had before, VS will delete the excess items from your list (not just hide them) so when you revert your setting the items won't show up until you explicitly open them again.

Quick test on my local machine confirms that this setting works with VS 2010.
    
    
Answer 2: 

    
    
It's Tools-
Answer 3: 

    
    
some times it is Not Working in Vs 2010 (SP1) found answer in the link
Visual Studio 2010, &quot;File &gt; Recent Projects and Solutions&quot; is not a active !

Hope it helps some one
    
    
Title: Is there a way to display line numbers in the VB6 / Visual Studio 6.0 IDE?
Description: 
    
    
                    
In the VB6 / Visual Studio 6.0 IDE, is there a way to display line numbers in the code editor like there is in recent versions of Visual Studio .NET?

For example, I would like to ask someone a question about their code and be able to say "In lines 10 through 13 of your MyClass.bas file, I noticed this happened."
    

        
Answer 1: 

    
    
Not that I know of. However, if you look at the toolbar when you have a code editor window open, there is a section that tells you the current line and column number the cursor is on:



Another possibility is to write an add-in for the IDE that can quickly highlight a range of lines. It's been awhile, but I'm pretty sure that the IDE's extensibility API lets you programmatically highlight sections of code in a code editor window.
    
    
Answer 2: 

    
    
This answer is not quite what you were asking, but I think it may still be useful / pertinent for people reading this question.

If you install the MZTools add-in to VB6, it has the ability to add line numbers in code to each line of each procedure / function / sub / etc.

This can be invaluable when trying to capture error information and you want to record the exact line number where the error originated at runtime. This is not needed in the IDE, but is very useful when trying to debug a compiled component in the field.



Edit: MZ Tools used to have a free version 3, which seems to no longer be available. But it worked well.
    
    
Answer 3: 

    
    
Install MZ-Tools and then perform following steps
On the menu bar, choose Tools 
Answer 4: 

    
    
Displaying Line Numbers in Visual Studio IDE

Line numbers are not displayed by default in Visual Studio.
You can display them in a few clicks by following this simple algorithm :) 


On the Menu Bar, click "TOOLS"
Select "OPTIONS" from the drop-down list
Then click "TEXT EDITOR" to unwrap the list
Choose "ALL LANGUAGES"
Click the "LINE NUMBERS" box under Display
Click "OK".  Now your line numbers are displaying.


I hope this helps someone out there :)
    
    
Title: How to run Debug server for Django project in PyCharm Community Edition?
Description: 
    
    
                    
Has anyone had issues setting up a debug configuration for Django project in PyCharm Community Edition?
Community Edition of the IDE is lacking the project type option on project setup and then when I am setting up Debug or Run config it asks me for a script it should run. What script would it be for Django, manage.py?
Thanks in advance
    

        
Answer 1: 

    
    
Yes you can.


In Run -/lili/lili/lili/lili/li/ol/div
Title: What is the difference between open project and import project in Intellij?
Description: 
    
    
                    
When first starting up Intellij IDEA you are given some quick start options which include Import Project and Open Project. What is the difference between these two options?

According to the answer in Difference between open and import a project in androidstudio open is used for existing projects and import is for migrating from other environments. However when testing, I am able to open both [existing projects already in Intellij and projects from other IDEs] using either Import or Open project.

I am wondering if the meaning is different for Intellij vs Android Studio.

Note: I have never used Android Studio so please excuse me if it shows the same behavior. 
    

        
Answer 1: 

    
    
Basically you can use Open every time as it works both for new and existing projects.

The only additional feature of Import is that you can set new project name and location if you wish to and additionaly do some basic config stuff such as Add Framework support (but thiis you can do even if you open project later). My personal preference is to use only Open as Import is rarely necessary for me.
    
    
Answer 2: 

    
    
At least for IDEA 2018.1 and 2018.2, there're extra differences when working with Gradle projects:


.idea/libraries/*.xml and .idea/modules.xml are only generated in case the project was opened. They're not in case it was imported.
The generated .iml files are slightly different (the imported version doesn't list any libraries, so I assume IDEA relies on the underlying foreign project model for imported projects).


Since it works both ways, I prefer importing projects as it results in less IDEA-specific generated files.
    
    
Title: How do you setup tab settings for user defined file types in notepad++?
Description: 
    
    
                    
I'm trying to setup Notepad++ to be able to edit a particular source-code file (*.mrc / mIRC Scripting File). The only thing I can't figure out is how to set the tab settings to 3 spaces.

I've searched google, however, I can't seem to find how to do this. The extent of what I search brings me to the setup for a user-defined language which I've already pretty much done. Tabs are the last steps.

When I add my user-defined file type to notepad++, the extension doesn't register in the Settings &gt; Preferences &gt; Language Menus tab. /p/div
Answer 1: 

    
    
You could always edit the langs.xml file. It contains code like:

&lt;Language name="batch" ext="bat cmd nt" commentLine="REM"&gt;
    &lt;Keywords name="instre1"&gt;rem set if else exist errorlevel for in do break call copy chcp cd chdir choice cls country ctty date del erase dir echo exit goto loadfix loadhigh mkdir md move path pause prompt rename ren rmdir rd shift time type ver verify vol com con lpt nul defined not errorlevel cmdextversion&lt;/Keywords&gt;
&lt;/Language&gt;

    
    
Answer 2: 

    
    
I ended up changing the "Default" tab spacing to what I use the most, and most of the other files I work with are already explicitly defined in the application.
    
    
Title: Young people using Emacs?
Description: 
    
    
                    
I am a college student that has fallen in love with Emacs. I have used IDEs in the past, and although features like Intellisense made the switch to Emacs very hard, I now think that Emacs is much more powerful, and features like Intellisense can be pretty closely matched by various modes depending on language (and I am not referring to M-/). I am happily writing Elisp code for everything that I need that isn't provided by modes or by Emacs itself and I love the way that it adapts and molds to my needs.

However, I do think that its main disadvantage is the fact that it has a pretty steep learning curve and that most new programmers will not even begin to learn it out of many common misconceptions.

So, I want to know the opinions of young people (or any person who didn't start using Emacs before there were IDEs) that are Emacs users. Just to get some reassurance that Emacs is not dead within our Eclipse-loving generation =). (Opinions of users of any other highly extensible editor like Jedit are also welcome) 
    

        
Answer 1: 

    
    
My "highly extensible editor" of choice is vim. Started using vi 10 years ago, at age 17, and I haven't really looked back.  I like to stay away from my mouse as much as possible. 

I rarely work in compiled languages these days, so the only thing I feel like I'm missing from an IDE is syntax-completion. Constantly switching to a browser to look up the order of arguments to various PHP functions gets a bit tedious.

PS: I don't want to start a vi/Emacs war here. I suspect that Emacs and vi[m] users have more in common with each other than either group has with IDErs.
    
    
Answer 2: 

    
    
I'm 62 and I've been using emacs for 21 years.  I am capable of using vim in a pinch, but I really prefer emacs.

I used to use TECO a long time ago (in the 1970's) and I liked that one too.
    
    
Answer 3: 

    
    
First off, why do you care what other people think?  It is clear that
Emacs has a vibrant community, as there are lots of extensions and
lots of people working on the core.  There is plenty of support to be
had for it.

If you are "worried" that other editors are better, then you should
try those editors and make the decision yourself.  Only you can know
what you like.

That said, I am young (23) and use Emacs.  I have used it for almost
15 years.  I have tried other editors, including Vim, Eclipse,
Netbeans, and Textmate.  None of those editors work as well as Emacs
as far as I'm concerned, so I feel I made the right choice.  I can't,
however, tell you which choice to make.  You will have to figure it
out for yourself.

It is important to note that I am pretty "invested" in Emacs.  I
maintain a lot of extensions, and have spent a lot of time
understanding the Emacs core... so if I switch editors, I am throwing
away a lot of time and experience.  This could theoretically cloud my
judgment, but I don't think it does.  Textmate works like Emacs, but
has fewer features.  (I try not to use my mouse, so the eyecandy and
OS X integration don't buy me much.)  Netbeans and Eclipse are nice
for managing Java projects, but on the rare occasion that I have to do
Java, I still find Emacs easier to use.  I even find that writing Ant
files myself gets me closer to "where I want to be" than relying on
Eclipse's auto-builds.  That leaves Vim, which is certainly
featureful, but is still a "lesser" Emacs.  Emacs has all the features
of Vim -- if you want modal editing, you can just invoke Viper.  The
only reason to use Vim is that you have already learned Vim, and you
can't stand the keybinding and editing model differences between Vim
and Viper.  (No, Viper is not a Vim clone.  It's Emacs with modal
editing.)

Anyway, JMHO.  I think Emacs will serve you well throughout your
programming career.  (Or any career that involves text.  Emacs is
great for writing books... and email.)
    
    
Answer 4: 

    
    
When i was young i heard this:
 A good hacker must be expert in 4 editors and 4 languages.

And have taken it to heart since then....

I routinely use vi(m), (x)emacs, eclipse , sed/awk/perl ( yeah .. they are text editors ).

IMHO, mastering a range of tools is essential. One should subject his brain to move
out of comfort zone every once in a while.

I now found it amazing that i have hundreds of key combinations at my fingertip , and rarely type key sequence of one into other.
    
    
Answer 5: 

    
    
I'm 21 and started using Emacs at 15, only moving away for Textmate/E in recent years.  I personally can't stand IDEs, feeling they get in the way far more than they help.  Give me a good straight-up text editor any day.
    
    
Answer 6: 

    
    
I'm 19, started using emacs last year, and I'm liking it. Even though I don't know how to use its "advanced" features yet, I'm comfortable with the fact that they exist and I could learn them when needed.

In my college, there shouldn't be much more than 5 students using Emacs or Vi, though.
    
    
Answer 7: 

    
    
Fear not, young programmer, and take courage from this Editor or IDE analysis.  Powerful editors like Emacs will be around as long as there are language mavens.  And IDE's will continue to serve the tool mavens.  And each camp will continue to be amazed at how [un]productive the other is.  ;-)
    
    
Answer 8: 

    
    
Well, I started using Emacs in college, and I'm only 30, so I think I count as part of the "Eclipse-loving generation".

I don't use it every day, but Emacs is certainly near the top of my tools list.  (And much higher than Eclipse, I can tell you that.)
    
    
Answer 9: 

    
    
The first proper editor I used was Brief and then a number of IDE based ones before someone convinced me to try emacs (on Windows no less). I made the decision then that I was going to learn that one editor well and when I needed it to do something different I'd learn how to do it.

The real benefit of choosing one editor and sticking to it is consistency. Whatever language or task you're doing, if you're in your favourite editor, everything is easily remembered. Added to that the extensibility makes things possible that are often not on the slick IDEs.

Of course the downside is that your emacs session is a well crafted environment. If I don't have my .emacs loaded up it can seem like a foreign environment. Things work almost but not quite like I'm used to. Fortunately with DVCS systems my perfect environment is a git clone away.
    
    
Answer 10: 

    
    
I'm a university student age 19, but I started learning Emacs a good 2-3 years ago. I tried vi(m) for a bit, but I couldn't stand the modal editing model.

Prior to my introduction to Emacs, I was using Gedit and nano to do all my coding.
    
    
Answer 11: 

    
    
If you go to most grad schools, you will find your share of UNIX hackers who stick with emacs, so it's definitely there. 
    
    
Answer 12: 

    
    
I'm 28 and switched from vim to emacs a month or so ago.  I learnt a bit of emacs while learning lisp.  I switched from vim because having compiler / debugger / shell integration made a lot of sense to me and I like the idea of the extensibility / customization.

I've got a few die-hard eclipse / intellij people I work with that are young and are rubbing their chins while thinking about making the switch.  The buffer philosophy was almost enough to sell one person who was sick of tabs in IDEs.

It's not so much about age I don't think - those that are considering emacs are the ones that are forward thinking enough to realize that is has powerful enough features / ideas that the learning curve is / might be worth it.
    
    
Answer 13: 

    
    
I'm 22 year old emacs user and I cry whenever I have to leave it to do something on other IDEs. 
    
    
Answer 14: 

    
    
I'm 21 and I use vim. It's a real step up from the other programming editors I had been using, and I would recommend anyone else in computer science courses to try it out.
    
    
Answer 15: 

    
    
I'm 23 and emacs was taught in our Operating Systems course as the "C editor you should use."  I used it for the course, but have moved on to other IDEs that better suit my workflow and day to day development environment.

Edit Because my original post was not altogether helpful.

I used emacs through a command terminal inside of PuTTY and that is my extent of using it.  I didn't mind it as an editor and got good enough with the shortcuts to be quite productive.  I haven't really explored the emacs editor anymore than that because I was already using eclipse and really liked it.

Now, I use eclipse day to day because it is an extensible language that I have to develop with Java, ActionScript, JavaScript, PHP, CSS, HTML, and even Scheme.  I also have a custom eclipse extension that I'm perfecting that helps me be more productive in my full time niche (WordPress development).  Eclipse provides FTP and SSH services and I've been familiar with the interface for longer than any other IDE, and that is why I use it.
    
    
Answer 16: 

    
    
I was born in 1970*, but came (back) to programming about 6 years ago, starting with Visual Basic 6 (ay-yi-yi!). A co-worker would hard-code all his Perl in a text-editor (INCLUDING forms), which boggled my mind, but did not entrance. Slowly, I started using humble MS notepad for... notes while on the phone, open tasks throughout the day, etc. And slowly, I started wanting more. A number of other factors (desire to work closer to regexes, old desire to learn LISP [I came of age in the 80s, if you know what I mean]) lead me through a couple of editors, and finally to Emacs.

Now, I get frustrated in IDEs that I can't key-navigate and tweak to my heart's content.

*okay, so I may no longer be a "young people" -- but when I started using Emacs I was in my early-mid 30s, and identified as such.
    
    
Answer 17: 

    
    
I'm 26 and I'm using VIM for several years now for C++ development. All my team mates use either VIM or Emacs (50% vs 50%, we have great flames from time to time), our lead is also using VIM. It's a best choice for us on Solaris.
However for large MS APIs like DirectX I use VS... its sometimes pain to switch but it's much easier to tackle this kind of monster :)
    
    
Answer 18: 

    
    
I barely step out of my VIM these days and on those applications where I find myself forced into an IDE, I quickly remember why.  I have become so accustomed to the VIM hotkeys for selection, replacement, folding, etc. that my productivity gets floored.  

Like others, I rarely work in compiled languages anymore, so I've setup shortcuts that run my Perl/PHP paste the interpreters to find syntax errors.  In some cases, I've even set up VIM to run available unit tests through the same interface.  It's also very easy to alt-tab back to a browser (preferably on another monitor) and hit "Control-R" for a refresh, all without touching the mouse.
    
    
Answer 19: 

    
    
I'm 21 and I use vim for now 3 or 4 years...
I once tried emacs when one of my teacher told me it was better than Vim...but I prefered my workflow with vim...

I tried to use emacs last week because I had problem indenting html files...But my teamate lost me when he started talking about key combination or something like that. My guess is that vim or emacs are two great editor...It's better than most of the IDE I know. 

Thumbs up to everyone.
    
    
Answer 20: 

    
    
I'm 20 and I started using Emacs last summer when I have to code c++ on linux, and Emacs was the only editor I can stand on openSUSE (Kate is horrible, horrible! - especially my work machine is kinda slow). Then I was won over; there is really nothing better in the world for a mouse-hater. Now I use emacs (yeah on Windows...) for all kind of thing including doing file operations with dired and playing tetris ;) 

That being said I still code c# in Visual Studio (occasion switch to emacs for major refactoring and boilerplate work, which is much^100 easier in emacs). IF emacs has intellisense (that works) then I'll dump the text editor in VS studio (I will still use the GUI designer though, nothing replaces that); as of now, having to look up classes is too much a pain for me to code c#.NET in emacs.
    
    
Answer 21: 

    
    
I'm a 19 year old college student who uses Emacs - I started using it about a year ago and haven't looked back.
    
    
Answer 22: 

    
    
I've only been using emacs for about 10 years now. At one point I took a decided turn to learn it (and vi) to be more comfortable editing directly on servers.

When it comes to writing code quickly and with little red flags when the syntax is wrong in realtime, using an IDE is like wearing gloves when handling thorny plants: you don't have to be as careful. (It's also like using a word processor with automatic spelling fixes and grammar checks compared to using, well, emacs for writing.)

So, I mostly use Eclipse/Xcode/other-required-IDE except when it comes to quick changes, direct edits on a server, or other remote/fast editing scenarios.

What I haven't done is looked around to see if there are any good modes for emacs that allow it to provide such quick editing help as other IDEs (though, the default modes do help quite a bit, anyway -- this isn't raw text editing, really).

I also had a pleasant surprise recently when I realized much of the Mac OS UI can use emacs commands in a similar way to how unix command line editing can be done with emacs commands. How cool is that?
    
    
Answer 23: 

    
    
I am under 30 and I use emacs.

Currently, I has to interface with computer through software speech recognition.
Nothing beats emacs because various commands are easy to program for recognition and create aliases.

now, it took me some time to get comfortable with programming in elisp, but I think benefit was worth it.  I have tried using eclipse, but there is something about emacs, particularly extensibility, that it's hard to replace.
    
    
Answer 24: 

    
    
Mostly I use gedit. Simple and sweet. I'm 20 and always hated IDEs (I got my start with Netbeans in high school). 
    
    
Answer 25: 

    
    
Emacs is all right; it doesn't quite do everything I like jEdit to do, but I'm not interested in spending time writing macros and plug-ins for my editor - I like getting stuff done instead. If I needed my editor to do something that different, I'd get another editor or install someone else's plugin.

I've used jEdit, Visual Studio, notepad++, TextWrangler. I abhor VIM.



Ironic....

I use emacs full-time now. Several months after the above answer I was doing a lot of remote logins into Linux and nano got too constricting. And, yes, I've spent time writing macros and plug-ins for emacs. jEdit is still pretty good, but emacs is quite better. Still don't use vim(yet?).
    
    
Answer 26: 

    
    
I'm 17 and I started using Emacs when I was 14, and VIM when I was 15. I use Emacs for SLIME and ERC mostly now, preferring GVim for editing files and such.
    
    
Answer 27: 

    
    
Each time I approached a respected guru type about Emacs, they would warn me away. Most of them didn't like it, either.  I took that as a clue.

OTOH, I was interested in TECO a long time ago (now you know my age),  and I hear Emacs grew out of that.  So, I still wonder...
    
    
Answer 28: 

    
    
You can have my copies of Eclipse, NetBeans and Visual Studio when you pry them from my cold, dead hands!
    
    
Answer 29: 

    
    
I tried to learn how to use Emacs when I started my degree, but I eventually gave up. Part of that is because I have a poor memory, and its keyboard shortcuts are unconventional compared to what I am use to. 

I do almost all my coding in TextMate (which has been dubbed the Emacs of Macs). If I'm in a command-line environment then ViM does the trick.
    
    
Answer 30: 

    
    
I code J2me in Windows, where my company doesn't impose me on certain IDE. And guess what, I return to my Old friend, Emacs... 

I am 31 now, and I first learning emacs ca 23. But, the situation makes me change IDE alots : Netbeans, VS.NET, Eclipse, etc.

You know, Emacs still beat other, in some perspective :)
    
    
Title: Visual Studio 2013 Update 2 - C# navigation bar drop down menus not working
Description: 
    
    
                    
In Visual Studio 2013 Update 2, my C# navigation bar isn't working when docked in the main VS window. The drop down menus don't open. I can scroll using the arrow keys when the menus have focus but can't navigate by typing a letter. When it isn't docked in the main VS window the menus work fine. I've uninstalled all extensions.

Can anyone suggest a solution?
    

        
Answer 1: 

    
    
I have the same problem in that the dropdowns do not drop down. However, I only get this when VS is running on my second screen. If I run on my main screen, the dropdowns work fine. Are you using a dual screen system? If so, maybe drag VS on to the main screen and see if it fixes it for you.
    
    
Answer 2: 

    
    
[Visual Studio editor dev here]

Yes, it's a bug we introduced in Update 2. Sorry about that, we are testing a fix right now.

This bug affects only monitors on the left side of the main monitor. So a workaround (as Paul suggested above) is to make the leftmost monitor the "Main display" (via Control Panel\Appearance and Personalization\Display\Screen Resolution) and then there would be no affected monitors at all. 

If that doesn't work for you for some reason, the other workaround is to drag Visual Studio (or floating document window) to the main monitor or any monitor on the right of the main one.

[Update] This is fixed in VS 2013 Update 3 CTP2 (http://support.microsoft.com/kb/2933779/en-us).
    
    
Answer 3: 

    
    
I've also got the issue.  And yep, using a dual screen setup.  If I right click on the desktop and go to Screen Resolution and make the other monitor my "main monitor" it fixes it.  Bizarre!!
    
    
Answer 4: 

    
    
I installed the latest VS 2013 Update 3 CTP and it fixed the problem for me:
http://support.microsoft.com/kb/2933779/en-us
    
    
Answer 5: 

    
    
In my case, the drop down control was minimized. I just had to drag it to resize again.
    
    
Title: I am looking for tips for learning Vim or Emacs the smart way
Description: 
    
    
                    
I am a quite happy user of Eclipse (I mostly develop in PHP and Python), however I found the answers to "What specific productivity gains does Vim/Emacs provide over GUI text editors?" interesting enough to make me wish to try out Vim or Emacs as well and see if they would turn out to be a better solution for me.

I have the general feeling that Vim and Emacs are not the kind of editor you learn by "playing with it" though. I have the impression you must dedicate some time and effort to "study" them a bit, before you can benefit from their power.

So, I have two questions for the community:


In the linked thread responders have essentially answered by commenting on Vim (often mentioning: "I'm sure Emacs has the same"). Google trends seems to indicate Vim is the mostly adopted between the two, however my first question is: knowing that I have no prior experience whatsoever on any of the two, and that I use and develop (mostly PHP and Python) on GNU/Linux systems (Ubuntu, Arch Linux), is there any of the two which would represent a better option to start with? (To be clear: my question is not about the quality of the editors but it is about what it is strategically better to learn in my situation).
What advice would you give me on how to learn using it/them? I know this is a broad question, but it is deliberately so. Have a look at this answer (unrelated topic) for an idea of the kind of information / style of answer I am looking for [but do not feel obliged to answer that way... any contribution will be welcome, in any form!]


EDIT (on picking the "accepted answer")

I picked one answer as the accepted one just now, but I would like to say "thank you" to all those who shared their experience and advice: almost all of it has being useful to me in some way. The thread has definitively exceeded my expectations! Thank you! :)
    

        
Answer 1: 

    
    
I would advise that checking out both is worth the time because of various reasons already covered by other answers or "Emacs vs vim vs XY" threads.

Still if you would have to pick one of them I'd go with vim because of one thing:

Availability

Vi(m) has the advantage that it is installed (not only available) by default on almost any *nix system. So no matter whether it is your system or someone else's or whether you are allowed to make changes to it or not, your favorite text editor and friend is there waiting for you.

Once you know vi(m) it feels awesome in those situations where you ssh into a machine and need to do something with text (navigating through a file, editing, whatever). You are going to feel like a King. I remember several times when I almost freaked out because nano or pico were not installed and I had to use "this ugly beast vi" which made unpredictable things when I started typing (because I wasn't in insert mode and didn't even know what that was) and when I was happy to have googled that ":wq!" gets me back out of hell. Now I can look back and smile about it.


  I have the general feeling that vim
  and emacs are not the kind of editor
  you learn by "playing with it" though


Vim and Emacs are certainly editors that you "learn by doing".

Of course the question cries for including these highly scientific text editor learning curve graphs =)



Vim might be a bit harder in the beginning because its modal editing can feel quite unfamiliar at first. I think motivation is the key here. The article "Why, oh WHY, do those #?@! nutheads use vi?" explains the advantages quite well I think. In my opinion it really is worth to give it a try even while the learning curve might be steeper than with other editors and it sounds like you bring the necessary motivation.

Back to learning by doing.

Something I wish I would have done the first time:

Check out Vimtutor. It is an interactive tutorial which demonstrates the power of vim by showcasing it's basic commands and how they can be composed. Just type vimtutor in your terminal.

This helped me to really "get it" after trying to learn editing with vim several times in the past. The tutorial eases the learning curve dramatically as it explains the commands and makes you actually perform them so they become a habit. It really makes a difference compared to being frustrated because of feeling handicapped. Using vimtutor you also will see what the benefits of modal editing are and instead of fighting or ignoring it you are going to embrace it because you have experienced the advantages at first hand. I guess it would be pretty difficult to learn that all by oneself. So these 30 minutes are quite worth it.
    
    
Answer 2: 

    
    

  I have the general feeling that vim and emacs are not the kind of editor you learn by "playing with it" though.


My experience with emacs is actually quite the opposite.  I tried going through the tutorial, but it didn't seem to help much.  The way I ultimately ended up learning is with a reference card and just forced myself to use emacs on my code until I got it correct*.  Then again, I do also have a screw loose.  Your milage may vary. Offer void where prohibited.  You get the idea.

One other piece of advice I recall reading somewhere is to try writing down a list of about 10 commands you want to learn and keep it by you while coding.  Once you've mastered those commands, make another list of 10 more.  Keep doing this until you've got a big enough chunk of the editor committed to memory.

*Note that the linked reference card is out-of-date.  If you google, you can get a more up-to-date reference card.


  knowing that I have no prior
  experience whatsoever on any of the
  two, and that I use and develop
  (mostly PHP and Python) on GNU/linux
  systems (ubuntu, archlinux), is there
  any of the two which would represent a
  better option to start with?


I'm an emacs guy, so my opinion should be obvious.  That said, you're likely best trying out the one that more people you know seem to use.  Having someone who's experienced with emacs (and I'd assume vim) is a great help.

If you don't know anyone who uses either one, choose whichever one you feel is the prettiest or has the coolest name.  You won't know enough to know which one you'll like, so you might as well choose arbitrarily.
    
    
Answer 3: 

    
    
For vim try vimtutor
    
    
Answer 4: 

    
    
I came to Vim when I started using Linux after years of Windows development, and had to do a lot of work on remote systems via ssh.  For the first couple of weeks hated it.  After that I could not live without it.

Probably the best way to start is to use Vim in easy mode ([g]vim -y), most installations have a shortcut called evim.   This runs vim in a mode that is in insert mode by default and remaps keys to the usual Windows ones (ctrl-S to save, ctrl-X to cut etc).  You can then use it like a regular Windowsy editor but still access the power of Vim.  

There is also Cream which is Vim + a bunch of scripts to make it behave even more like a Windows editor.

I started out using evim and Cream, but found I gradually transitioned to using 100% vim.

Also if you use gvim then most of the functionality is also available through the menus and you can see the keystrokes for the same functionality.

Also read the docs - there are extensive help files available on every aspect.  I still browse them from time to time and find something new.
    
    
Answer 5: 

    
    
Using VIM, I find the following quick reference card very helpful, especially for the stuff I don't do everyday:
VIM QuickReference

For emacs, you should read the GNU Emacs Manual. Don't try to do everything all at once.
Start with the basic stuff, and then move on to the more powerful features once you're comfortable with the easier stuff.
    
    
Answer 6: 

    
    
Some time ago I decided to learn vim beside Eclipse as well because of its powerful textual editing,  search and navigation features. But - at the same time - I liked the project handling, code completion, refactoring and debugging features of Eclipse and I did not want to lose them.

Nowadays I use an Eclipse plugin called vrapper which provides me nearly all basic features of vim inside Eclipse without losing any Eclipse functionality. Of course it is not a full-featured vim but it gave me the productivity gain I 'expected' (motions, the dot operator, registers and marks). Also, this plugin can be considered the 'trial' version of vim where you can learn all basic and some advanced stuff within your 'best-known' environment.

There is another interesting approach called eclim. Eclim integrates Eclipse with vim from the vim side so you can use many features from Eclipse within vim.

For learning the basics of vim, this graphical cheatsheet helped me a lot.
    
    
Answer 7: 

    
    
I would go for Emacs.
Explicit command name will makes your task easier.
I switched to emacs after I had years of experience with vi and never looked back.
Go with tutorial first.
Hang out at #emacs in irc and people are happy to help you in real time, for whatever more you need.
    
    
Answer 8: 

    
    
My advice for learning emacs is to understand that everything is done by a command (written in elisp) that is connected (bound) to the key strokes that you make. The power of emacs comes from being able to write new commands and use commands that are not bound to keys (there are too many commands to bind each one to a command.) as well, of course, read and modify commands that are already in emacs.

Next learn how to use the Help key and how to make a key binding list, then how to search for relevant commands (apropos) and see if they are bound already.

Be ready to take learning diversions into the emacs manual (Help, Read manual, Emacs manual).
    
    
Answer 9: 

    
    
One argument in favor of Vim if you know Python is that you can write Vim scripts in Python.  See :h python.  Emacs requires you to learn elisp.

I find myself gravitating toward Vim for scripting languages like Ruby/Perl/Python/PHP, and for Emacs for languages that are more interactive (Lisp, essentially).  If you develop your Python code using an interactive Python shell a lot, Emacs might be good, because you can embed a Python shell right into Emacs.  If you write code and run it from commandline a lot, Vim can handle that easily enough via :make or :!.

I really recommend you learn both and pick whichever you like better.  They are both worth knowing.
    
    
Answer 10: 

    
    
Wow, vi/vim vs emacs, what a temptation...

From a vi-user's perspective...


Always Therevi is on about every unix system ever released, in the default install, and available for Win
May save you from RSIvi uses home-row keys for just about everything, modifiers like control and meta are used only for rarely invoked functions and even shift-key use is moderate. This was probably all just a lucky accident, but don't laugh at RSI. It can happen to anyone, it's seriously painful, it's potentially career-ending, and it's hard to treat.
Starts up instantly.In the past, this was a huge advantage over emacs. Emacs users had to start up just once, and navigate everywhere within emacs. Today it starts faster, but in vi, it's perfectly reasonable to quit out of it entirely on every compile or test cycle. 
Has an awesome line-mode The line mode in vi is backwards compatible to the original Unix ed(1) program, an editor that had only a line mode. That is, vi's regular-expression-substitution-engine-/-line-editor was once an editor all by itself.
Easily scriptableGot something you want to do to every .whatever file in your project? It's easy to write a declarative script that will edit a sequence of files. No need for imperative or procedural programming.
Easily extensibleVim, at least, can be extended in Python.

    
    
Answer 11: 

    
    
First of all, be humble. 

As long as you remain aware that they are very powerful tools you'll be ok. If you are finding a task very difficult, and you are thinking 'it's just me that sucks not the editor', you're in the right mind to learn and improve.

Bram's 7 habits are a good tenets to go by 
http://www.moolenaar.net/habits.html

Also I highly recommend having a go at writing a plugin. It doesn't matter what it does. It gives you the impetus to dive deep into the manuals. 
    
    
Answer 12: 

    
    
Maybe, a good way is to learn vim/emacs while using eclipse. Try vimplugin or emacsplus plugins for eclipse.
    
    
Answer 13: 

    
    
This should really just be a comment, but against which answer ...

With Vim I'd suggest using the GUI version for a start, just dive in, the built-in help is excellent (:h and the screen splits adding a panel with comprehensive "hyperlinked" help pages). With vim the only potentially dangerous operation is a write, everything else you do is recoverable per command or edit (undo &amp; redo). 

The power acquired easily incentivises the learning.
    
    
Answer 14: 

    
    
Here's the way you learn: Start typing. When you hit a point where you want to do something other than typing, look up how you do that. Repeat. It helps to start with a few basics, say 7 fundamental commands. Other than that, when you run into wanting to do some operation, look it up and use it.
    
    
Answer 15: 

    
    
This great Tutorial was a big help for me for my first steps in Vim. It is a gently introduction and explain at the same time the philosophy of vim in a pleasant way:

aByteOfVim
    
    
Answer 16: 

    
    
The way I learned emacs was mostly by doing both of the following:


All the GUI menus show you the key-bindings you can use to execute the same command as that menu item.  Pay attention to the bindings for the menu items you select a lot, and try them out manually next time you get a chance.
ctrl-h ctrl-h (think "Help! Help!") brings up a buffer that shows the various types of help available. If you then hit the "b" key (the buffer calls it "describe-bindings"), you will get a list of all the key bindings that are available in the buffer you are working on. Just peruse that every now and then with an eye for commands that look useful. Try them out when you get a chance.


As for vi, I learned it in the days before vim, so I pretty much had to use man vi to figure it out. Most of us emacs users will tell you that all the vi you need to know is :q! ("quit, and I really mean it").   :-) 

But in truth if you are a Unix user you need to learn at least enough vi to do simple edits to config files and save them. You never know exactly what (if anything) you will get when you try to start emacs on a strange system Unix system, but vi is always there.
    
    
Answer 17: 

    
    
Nearly everything you see or interact with in Emacs can tell you about itself -- you just need to know how to ask it.

To learn Emacs, learn about the current Emacs context: what the values of things are, what the relations between them are, how they are denoted, how you can change them or otherwise interact with them.

The most important thing to learn is that Emacs is Emacs Lisp -- it is a Lisp ecosystem.  Learning Emacs means also learning Emacs Lisp -- the more you know, the better.  Lisp is the most flexible and most powerful way in which Emacs realizes itself as "the self-documenting, extensible editor".

Icicles can help you learn Emacs and Emacs Lisp.  It helps you ask Emacs about itself.  This page gives an overview of the ways it does that: Emacs Newbie with Icicles.
    
    
Answer 18: 

    
    
Don't get caught up in the vi(m) versus emacs religious war. They are both great editors. I originally started with VI (real VI not VIM) and later started using Emacs. These days, I tend to use both, but emacs more because emacs has some features I need which are not in vim. 

The real challenge and what you should be aiming for is how to be as efficient, quick and accurate as possible with your editor of choice. Both VI and Emacs have a lot to offer in this respect. However, much of it boils down to two main habits you need to develop


Don't use the mouse. Both editors were created when mice were not the plague they are now. When it comes to editing, cutting, pasting, highlighting etc, both editors offer keyboard equivalents. Use them and keep your fingers on the keyboard. You will be surprised how much faster you will become
Avoid the arrow keys. This is for a similar reason. The arrow keys tend to make you move your hands off the main keyboard. In the end, this also slows you down and makes you less efficient. Both editors provide far more convenient functions which are faster.


These are the two main things to focus on when learning either of these editors. There is lots more, but to start with, just start with focusing on using the main keyboard. 

After you have got that down pat, then begin to think about how you can tweak your environment to suit your needs. By this time, you will be familiar with the power of the editor you have chosen and will probably have some ideas. Both of these editors are very configurable. I find emacs is the most configurable, but you can easily get lost iin writing elisp to configure things and before you know it, your an elisp programmer who does a bit of PHP and Python. To some extent, the same can happen with VIM, but to a lesser degree. However, note that the defaults have usually been set by people with lots of experience and who probably know something you don't. Avoid making the mistake of trying to modify either editor to be what your use to. Learn how it works with minimal config first and then change once you have an idea of why it was done some way - know the rules before breaking them.

If your serious about programming, your editor will be your most important tool. Other important tools are your screen, your chair and your keyboard. The rest is incidental. 
    
    
Title: How to rename / move a project in Intellij Idea 12?
Description: 
    
    
                    
As stated here one can change the name of a project. However, it only changes the name of the project and it will not change the folder structure. 

As an example if your project is called sample1 and it resides ~/user1/development/IdeaProjects/sample1, the folder location won't be changed to ~/user1/development/IdeaProjects/sample2 if one changes the project name to sample2.
    

        
Answer 1: 

    
    
It seems that one has to right click on the project (after following the instructions to rename the Project), then choose Refactor -/p/div
Answer 2: 

    
    

Right click on project, then Refactor -/em/lili/lili/liliem/emem
Answer 3: 

    
    

Close IntelliJ
Rename the folder in Explorer (Windows) / Finder (OSX)
Open IntelliJ
Import Project from Dialog, or File -/lili/lili/li/ol/div
Answer 4: 

    
    

Go to File then Project Structure 
Under Project Settings -&gt; Project make sure that you change the project name.
Then under Project Settings -&gt; Modules change the name there as well.
Restart Intellij
Use your File Explorer to confirm that the project/modules have been renamed.

    
    
Answer 5: 

    
    
After renaming the project folder of a Kotlin project in IntelliJ, using the Import Project option as suggested in the other answers created module related problems for me. I was not able to select Main class in the Run dialogue. To solve this, I used Create New Project option. It doesn't delete your project files.

So to rename the folder, first create a copy of your project for safety and then follow these steps:


Close IntelliJ.
Go to file explorer and manually rename the folder.
Open IntelliJ.
Choose the option Create New Project
Select your desired language/framework e.g. Kotlin, click Next
For Project Name, specify your desired project name. Maybe same as folder name.
For Project Location, choose the folder that you manually renamed.
Click Finish, IntelliJ will ask if you want to overwrite .idea and .iml files. Click Yes for both.


Hope that helps.
    
    
Answer 6: 

    
    
If it is a gradle project, instead of renaming it using Refactor-/em/pullicode/codeem/em/lili/li/ulpa href="https://stackoverflow.com/a/41563271/3059685"/a/pp/pulliem
Answer 7: 

    
    
For JetBrains v. 2019.2 (September 2019):

To move project directory without changing it's name:


Press Alt+1 to open project structure

Right click on project directory
Go to File -
Answer 8: 

    
    
click on your project file,which is you want to move and then push F6
    
    
Answer 9: 

    
    
Close IntelliJ 
Rename the folder in Explorer (Windows) / Finder
(OSX)   
Open IntelliJ Import Project from Dialog, or File -&gt; Import
Project     
Select the folder with the new name 
further additional steps might be required if you see your module named
as  new_modulename[parent module/old module name],
then update   
settings.gradle with new name  and reimport

    
    
Answer 10: 

    
    
A work-arround for this, if you get an error when click "projectPackage" -
Title: Can we use Android studio for AOSP development?
Description: 
    
    
                    
Can we use Android studio for AOSP(Android Open Source Project) development, is there a way to do it. I didnt find one. anybody got any idea on this please ?
    

        
Answer 1: 

    
    
You can use Android Studio as a IDE for AOSP, since it's just a modified version of InteliJ's IDE.

from AOSP root: 

 make idegen &amp;&amp; development/tools/idegen/idegen.sh


Then just "Open Project" in Android Studio and select the android.ipr it generated.
    
    
Answer 2: 

    
    
To import AOSP source in Android Studio or Eclipse, follow the full instructions here :
https://android.googlesource.com/platform/development/+/master/tools/idegen/README
    
    
Answer 3: 

    
    
What Pedlar suggested above is one way of doing it. I ran into lot of Jar dependency issues when I tried it with IDEA community edition (Android Studio is a fork of IDEA IDE). The IDE keeps prompting you about duplicate jars etc. The generated project includes framework Java sources as well as App sources. I tried to build an App project which resulted in broken AOSP build. IMHO, IDEA is a great IDE for Java development. But didn't work well with AOSP.

What worked for me is using eclipse to browse/edit/debug framework sources, but build the code from a terminal window. To avoid AOSP build breaks, please create a shadow dir of AOSP (i.e. lndir of AOSP) and use shadow dir for eclipse project.

This is explained at Using eclipse to browse/edit AOSP link in step by step.
If you are working on AOSP, you might want to check Debugging Android framework services.
    
    
Title: Pycharm&#39;s code style inspection: ignore/switch off specific rules
Description: 
    
    
                    
I'm trying to import existing project into PyCharm. I can refactor the code so that PyCharm will be pleased, but we like to have spaces around colons in dictionaries, like this: {"A" : "B"}. We also like aligning assignments:

a   = 1
abc = 3


Is there a way to configure PyCharm, so that he'll ignore all errors/warnings related to this specific stuff?
    

        
Answer 1: 

    
    
Using PyCharm 5 (community edition), you can do the following: Code –&gt; Inspect Code.  Then select the required inspection error, and click on the "Suppress" option or "Ignore errors like this" option on right hand side.
Please look at the screenshot below:



When you choose the "Suppress" option, it adds a comment as shown in the screenshot below:



Suppressing can be done at the statement, or function/method, levels. If trying to suppress an argument to a function, the suppression only works at the function level (meaning it also suppresses other name reference violations that might exist within that function).

You also have the option of switching off "PEP8 coding style violations" altogether (by ticking the box shown below), or explicitly managing "Ignore Errors" manually. Screenshot given below:



In general, you should perhaps question why you are suppressing PEP8 guidelines. However, sometimes it appears necessary, for instance when using the pytest module, it is necessary to shadow variables, etc, which the PEP8 Inspection complains about in. In such cases, this feature in PyCharm is very helpful.
    
    
Answer 2: 

    
    
If you're ok to ignore all matching issues, you can just press Alt-Enter (or click on the lightbulb) and choose "Disable Inspection". Saves you going into the settings and trying to figure out the inspection rule that matches.

From http://iambigblind.blogspot.jp/2013/02/configuring-pep8py-support-in-pycharm-27.html
    
    
Answer 3: 

    
    
@Krzysztof Stanisławek, function is different as Pycharm follows the PEP8 coding style, so it is recommended that there is no whitespace between the function variables and ":", if you don't want this, you can disable it by 

"Settings"-&gt; "Editor"-&gt; "Inspections"-&gt;"PEP8 coding style violation"


However, this is not recommended.
    
    
Answer 4: 

    
    
I got the same issue, and the neat solution has been pointed by @fantabolous, from configuring PEP8.py support in PyCharm 2.7

Example before 


Adding the error code either manually or with "Alt+Enter" on error highlight 
The error code can be found here 


After the changes 


It's great to select precisely some rules instead of disabling all warning from PEP8. Thanks to the previous comments.
    
    
Answer 5: 

    
    
to have spaces around colons in dictionaries, configure Settings &gt; Editor &gt; Python Spaces

Other &gt; Before ':'

and

Other &gt; After ':'
    
    
Title: What is the best Ruby on Rails environment for a Visual Studio user?
Description: 
    
    
                    
I've been a Visual Studio user since 1997, and used VB 3.0 before that. My whole professional life has been spent inside the Microsoft development environments.

Now I would like to branch out into Ruby on Rails to try something different, and it doesn't have the kind of vendor support that C# does (for very obvious reasons).

For someone coming from the world of Visual Studio, what is the best total environment (IDE, tools, gems, etc) to set up for RoR development on Windows that would make the transition easier?
    

        
Answer 1: 

    
    
If you want to stick with Visual Studio, you can always use the Ruby in Steel plugin by Sapphire Steel. The best traditional IDE for Ruby is probably NetBeans, it even has a special stripped-down Ruby Edition.

However, note that unlike less expressive languages like Java, C# or VB.NET, you can not only get by, but even be more productive with a good text editor than with a traditional static IDE. IDEs like NetBeans, Eclipse and Visual Studio are designed with static languages in mind, and trying to force Ruby into that ecosystem is just unnatural.

There is a nice article on The Best Environment for Rails on Windows by Fabio Akita that you might want to read. While I don't agree with everything he writes (mostly because I don't use Rails), it is a pretty good introduction of how you might want to setup a development environment specifically for Rails.
    
    
Answer 2: 

    
    
Try JetBrains RubyMine. When installing it, you have the option to set it up to match Visual Studio environment settings.  All the short cuts are the same as Visual Studio.  It even switches the copy and paste keys from command to control on a Mac.  It's a bit expensive considering how many free options there are but in my eyes its worth it.  

This thing is so highly customizable it's almost overwhelming. 
    
    
Answer 3: 

    
    
Netbeans!  Its got the most similar features.  I developed for years in VS before the switch.  It was the only one that I really liked and felt comfortable using.

Netbeans.org
    
    
Answer 4: 

    
    
You might find that RadRails (Aptana) is an excellent choice: (http://www.aptana.com/rails) - NOTE: Make sure you look at the Features and Comparisons tab as RadRails has many compelling features.  Additionally, I have used Aptana Studio for JQuery development and it help me to be very productive.

I have tried Netbeans and it seemed very promising as well but that is mentioned many times so I thought to offer another approach I was aware of.

Hope this helps!
    
    
Answer 5: 

    
    
I use netbeans for two reasons.  I like the visual studio style navigation pane and for the debugger.  

Be warned though, Netbeans is pretty slow.  It doesn't bother me that much because I too am slow.

I also dislike the filename tabs because you can easily be confused about what file you are working on since there is no directory information unless you mouse over the tab.
    
    
Answer 6: 

    
    
In 2018? Visual Studio Code! These things always seem to come full circle right?
    
    
